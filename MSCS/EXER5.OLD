; ASSEMBLY FOR ODD OR EVEN, when press zero stops
.model small
.code
org 100h
jmp main                     ; jump to main


plist1 label byte
maxlen db 59
actlen db ?
kybd db 60 dup ('$'),0ah,0dh

msg2 db 'Ascending Order: $'
msg3 db 10,13, 'EVEN$'

msg4 db 'Enter integers: $'
even1 db 'Even: $'
odd1 db 'Odd: $'

space1 db '',0ah,0dh
       db '$'

word3 db 60 dup  ('$'),0ah,0dh     ; word3 will be now the will save




word4 db 60 dup  ('$'),0ah,0dh     ; word3 will be now the will save



word5 db 60 dup  ('$'),0ah,0dh     ; word3 will be now the will save


V1      DB      00H      ; even count
V2      DB      00H	 ; odd count

j db 00h
i db 00h
tp db ?


MAIN PROC NEAR


	mov bp, 0h

loop1:
    mov ah, 1	      	     ; SCANNING 
  	int 21h
	
	

	MOV CL,AL
    SUB CL,30H                   ; minus 48
	
	
  	mov word3[bp], al
  	inc bp
	
	mov word3[bp], ' '
	inc bp
	
	cmp cl, 0
	je done
		
	mov ah, 09h
	lea dx, space1
	int 21h   
	
	
	jmp loop1
	
done:
	mov tp, bp

	mov ah, 09h
	lea dx, space1
	int 21h   

	mov ah, 09h
	lea dx, msg4
	int 21h   
	
	mov ah, 09h
	lea dx, space1
	int 21h   

	mov ah, 09h
	lea dx, word3
	int 21h   
	
	mov ah, 09h
	lea dx, space1
	int 21h   

	;mov ah, 09h
	;lea dx, msg2
	;int 21h   
	mov bp, 0
lx:	
	mov al, word3[bp]
	mov word4[bp], al
	cmp word3[bp], '0'
	inc bp
	jne lx
	
	
;;;;;;;;;;;;
  
	
mov bx, 00                             ;  bx is for kybd[i]
mov ch, tp
mov i, 00

for1:
	mov cl, i
	cmp ch, cl
	je done1
  	
	mov j, 00
	mov bp, 00 ; bp is for kybd[j]
		
for2:
	mov cl, j
	cmp ch, cl  ; kung equal undang na balik sa for1, here2 --> for1 
	je here2
	
	mov dl, word4[bx]      ; bx- i ; bp - j 
	mov dh, word4[bp]	
	cmp dl, dh
	
	jl here1
	jg for22
	
	
for22:
  inc bp
  inc bp
  inc j
  inc j
  jmp for2
	
here1:	
	mov dl, word4[bx]
	mov al, word4[bp]
        mov word4[bx], al
        mov word4[bp], dl		
	inc bp
	inc bp
	inc j
	inc j
	jmp for2

	
here2:
     inc bx
	 inc bx
     inc i
	 inc i
     jmp for1
	
	
	;;;;;;;;;;;;
	
			
done1:
		mov ah, 09h
		lea dx, space1
		int 21h   
		
		mov ah, 09h
		lea dx, msg2
		int 21h

		mov ah, 09h
		lea dx, space1
		int 21h   
		
		mov ah, 09h
		lea dx, word4
		int 21h   
	
        MOV AH,4CH
        INT 21H

MAIN ENDP
END MAIN
