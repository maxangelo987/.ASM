~^
#ERROR messages will be removed if you leave these first two lines in     @@@@#
.model small
.code
org 100h
jmp main




mode db ?
menu1 db'                                                                               ',0ah, 0dh
     db' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah, 0dh   	
     db' лл                                                                          лл',0ah, 0dh
     db' лл  лллБ      лллБ ллллллллБ     лллллллБ                                   лл',0ah, 0dh
     db' лл  ллллБ    ллллБ лллллллллБ   лллллллллБ                                  лл',0ah, 0dh
     db' лл  лллллБ  лллллБ лллБ   лллБ лллБ    лллБ   млллл  лл  л   л лллл мллппл  лл',0ah, 0dh
     db' лл  лллБллБллБлллБ лллБ   лллБ лллБ           л     л  л ллмлл лмм  ллммм   лл',0ah, 0dh
     db' лл  лллБ лллБ лллБ лллБ   лллБ лллБ           л ппл лллл л л л л        лл  лл',0ah, 0dh
     db' лл  лллБ  лБ  лллБ лллБ   лллБ лллБ    лллБ    ллл  л  л л   л лллл ллллл   лл',0ah, 0dh
     db' лл  лллБ      лллБ лллллллллБ   лллллллллБ                                  лл',0ah, 0dh
     db' лл  лллБ      лллБ ллллллллБ     лллллллБ                                   лл',0ah, 0dh
     db' лл                                                                          лл',0ah, 0dh
     db' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah, 0dh		      
     db' лл	  								     лл',0ah, 0dh
     db' лл            [A] TYPING    [B] MAZE    [C] CREDITS    [E] EXIT             лл',0ah, 0dh
     db' лл									     лл',0ah, 0dh
     db' лл			 ЩЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЛ                            лл',0ah, 0dh 			      
     db' лл			 Клл                    К  			     лл',0ah, 0dh
     db' лл			 ШЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭМ		             лл',0ah, 0dh
     db' лл			      	                                             лл',0ah, 0dh
     db' лл			      	  LOADING...                                 лл',0ah, 0dh
     db' лл									     лл',0ah, 0dh
     db' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah, 0dh
     db'				 						   ','$'

menu1_1 db'                                                                               ',0ah, 0dh
     db' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah, 0dh   	
     db' лл                                                                          лл',0ah, 0dh
     db' лл  лллБ      лллБ ллллллллБ     лллллллБ                                   лл',0ah, 0dh
     db' лл  ллллБ    ллллБ лллллллллБ   лллллллллБ                                  лл',0ah, 0dh
     db' лл  лллллБ  лллллБ лллБ   лллБ лллБ    лллБ   млллл  лл  л   л лллл мллппл  лл',0ah, 0dh
     db' лл  лллБллБллБлллБ лллБ   лллБ лллБ           л     л  л ллмлл лмм  ллммм   лл',0ah, 0dh
     db' лл  лллБ лллБ лллБ лллБ   лллБ лллБ           л ппл лллл л л л л        лл  лл',0ah, 0dh
     db' лл  лллБ  лБ  лллБ лллБ   лллБ лллБ    лллБ    ллл  л  л л   л лллл ллллл   лл',0ah, 0dh
     db' лл  лллБ      лллБ лллллллллБ   лллллллллБ                                  лл',0ah, 0dh
     db' лл  лллБ      лллБ ллллллллБ     лллллллБ                                   лл',0ah, 0dh
     db' лл                                                                          лл',0ah, 0dh
     db' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah, 0dh		      
     db' лл	  								     лл',0ah, 0dh
     db' лл            [A] TYPING    [B] MAZE    [C] CREDITS    [E] EXIT             лл',0ah, 0dh
     db' лл									     лл',0ah, 0dh
     db' лл			 ЩЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЛ                            лл',0ah, 0dh 			      
     db' лл			 Клллллллл              К  			     лл',0ah, 0dh
     db' лл			 ШЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭМ		             лл',0ah, 0dh
     db' лл			      	                                             лл',0ah, 0dh
     db' лл			      	  LOADING...                                 лл',0ah, 0dh
     db' лл									     лл',0ah, 0dh
     db' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah, 0dh
     db'				 						   ','$'

menu1_2 db'                                                                               ',0ah, 0dh
     db' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah, 0dh   	
     db' лл                                                                          лл',0ah, 0dh
     db' лл  лллБ      лллБ ллллллллБ     лллллллБ                                   лл',0ah, 0dh
     db' лл  ллллБ    ллллБ лллллллллБ   лллллллллБ                                  лл',0ah, 0dh
     db' лл  лллллБ  лллллБ лллБ   лллБ лллБ    лллБ   млллл  лл  л   л лллл мллппл  лл',0ah, 0dh
     db' лл  лллБллБллБлллБ лллБ   лллБ лллБ           л     л  л ллмлл лмм  ллммм   лл',0ah, 0dh
     db' лл  лллБ лллБ лллБ лллБ   лллБ лллБ           л ппл лллл л л л л        лл  лл',0ah, 0dh
     db' лл  лллБ  лБ  лллБ лллБ   лллБ лллБ    лллБ    ллл  л  л л   л лллл ллллл   лл',0ah, 0dh
     db' лл  лллБ      лллБ лллллллллБ   лллллллллБ                                  лл',0ah, 0dh
     db' лл  лллБ      лллБ ллллллллБ     лллллллБ                                   лл',0ah, 0dh
     db' лл                                                                          лл',0ah, 0dh
     db' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah, 0dh		      
     db' лл	  								     лл',0ah, 0dh
     db' лл            [A] TYPING    [B] MAZE    [C] CREDITS    [E] EXIT             лл',0ah, 0dh
     db' лл									     лл',0ah, 0dh
     db' лл			 ЩЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЛ                            лл',0ah, 0dh 			      
     db' лл			 Кллллллллллллллллл     К  			     лл',0ah, 0dh
     db' лл			 ШЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭМ		             лл',0ah, 0dh
     db' лл			      	                                             лл',0ah, 0dh
     db' лл			      	  LOADING...                                 лл',0ah, 0dh
     db' лл									     лл',0ah, 0dh
     db' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah, 0dh
     db'				 						   ','$'

menu1_3 db'                                                                               ',0ah, 0dh
     db' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah, 0dh   	
     db' лл                                                                          лл',0ah, 0dh
     db' лл  лллБ      лллБ ллллллллБ     лллллллБ                                   лл',0ah, 0dh
     db' лл  ллллБ    ллллБ лллллллллБ   лллллллллБ                                  лл',0ah, 0dh
     db' лл  лллллБ  лллллБ лллБ   лллБ лллБ    лллБ   млллл  лл  л   л лллл мллппл  лл',0ah, 0dh
     db' лл  лллБллБллБлллБ лллБ   лллБ лллБ           л     л  л ллмлл лмм  ллммм   лл',0ah, 0dh
     db' лл  лллБ лллБ лллБ лллБ   лллБ лллБ           л ппл лллл л л л л        лл  лл',0ah, 0dh
     db' лл  лллБ  лБ  лллБ лллБ   лллБ лллБ    лллБ    ллл  л  л л   л лллл ллллл   лл',0ah, 0dh
     db' лл  лллБ      лллБ лллллллллБ   лллллллллБ                                  лл',0ah, 0dh
     db' лл  лллБ      лллБ ллллллллБ     лллллллБ                                   лл',0ah, 0dh
     db' лл                                                                          лл',0ah, 0dh
     db' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah, 0dh		      
     db' лл	  								     лл',0ah, 0dh
     db' лл            [A] TYPING    [B] MAZE    [C] CREDITS    [E] EXIT             лл',0ah, 0dh
     db' лл									     лл',0ah, 0dh
     db' лл			 ЩЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЛ                            лл',0ah, 0dh 			      
     db' лл			 КллллллллллллллллллллллК  			     лл',0ah, 0dh
     db' лл			 ШЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭМ		             лл',0ah, 0dh
     db' лл			      	                                             лл',0ah, 0dh
     db' лл			      	  LOADING...                                 лл',0ah, 0dh
     db' лл									     лл',0ah, 0dh
     db' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah, 0dh
     db'				 						   ','$'

menu1_4 db'                                                                               ',0ah, 0dh
     db' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah, 0dh   	
     db' лл                                                                          лл',0ah, 0dh
     db' лл  лллБ      лллБ ллллллллБ     лллллллБ                                   лл',0ah, 0dh
     db' лл  ллллБ    ллллБ лллллллллБ   лллллллллБ                                  лл',0ah, 0dh
     db' лл  лллллБ  лллллБ лллБ   лллБ лллБ    лллБ   млллл  лл  л   л лллл мллппл  лл',0ah, 0dh
     db' лл  лллБллБллБлллБ лллБ   лллБ лллБ           л     л  л ллмлл лмм  ллммм   лл',0ah, 0dh
     db' лл  лллБ лллБ лллБ лллБ   лллБ лллБ           л ппл лллл л л л л        лл  лл',0ah, 0dh
     db' лл  лллБ  лБ  лллБ лллБ   лллБ лллБ    лллБ    ллл  л  л л   л лллл ллллл   лл',0ah, 0dh
     db' лл  лллБ      лллБ лллллллллБ   лллллллллБ                                  лл',0ah, 0dh
     db' лл  лллБ      лллБ ллллллллБ     лллллллБ                                   лл',0ah, 0dh
     db' лл                                                                          лл',0ah, 0dh
     db' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah, 0dh		      
     db' лл	  								     лл',0ah, 0dh
     db' лл            [A] TYPING    [B] MAZE    [C] CREDITS    [E] EXIT             лл',0ah, 0dh
     db' лл									     лл',0ah, 0dh
     db' лл                                                                          лл',0ah, 0dh
     db' лл                                                                          лл',0ah, 0dh
     db' лл                    ENTER THE LETTER OF YOUR CHOICE                       лл',0ah, 0dh
     db' лл                                                                          лл',0ah, 0dh
     db' лл                                                                          лл',0ah, 0dh
     db' лл                                                                          лл',0ah, 0dh
     db' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah, 0dh
     db'				 						   ','$'

menu2 db'                                                                               ',0ah, 0dh
      db' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл            лллллллл  лл    лл      лл      лллллллл лл    лл             лл',0ah, 0dh
      db' лл            лл       лллл   лл      лл      лл       ллл   лл             лл',0ah, 0dh
      db' лл            лллллл  лл  лл  лл      лл      лллллл   лллл  лл             лл',0ah, 0dh
      db' лл            лл     лллллллл лл      лл      лл       лл лл лл             лл',0ah, 0dh
      db' лл            лл     лл    лл лл      лл      лл       лл  лллл             лл',0ah, 0dh
      db' лл            лл     лл    лл ллллллл ллллллл лллллллл лл    лл             лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл           лл        лл   лллллл   лллллллл   ллллллл    ллллллл          лл',0ah, 0dh
      db' лл           лл        лл  лл    лл  лл     лл  лл    лл  лл                лл',0ah, 0dh
      db' лл           лл        лл лл      лл лл     лл  лл     лл  ллллллл          лл',0ah, 0dh
      db' лл           лл   лл   лл лл      лл лллллллл   лл     лл        лл         лл',0ah, 0dh
      db' лл            лл лллл лл   лл    лл  лл    лл   лл    лл         лл         лл',0ah, 0dh
      db' лл             лл    лл     лллллл   лл     лл  ллллллл   лллллллл          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                            ( THE TYPING GAME )                           лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл         [P] PLAY   [I] INSTRUCTIONS   [M] MAIN MENU   [E] EXIT           лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah, 0dh
      db'                                                                               ','$'


menu2_8 db'                                                                               ',0ah, 0dh
      db' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah, 0dh
      db' лл            лллллллл  лл    лл      лл      лллллллл лл    лл             лл',0ah, 0dh
      db' лл            лл       лллл   лл      лл      лл       ллл   лл             лл',0ah, 0dh
      db' лл            лллллл  лл  лл  лл      лл      лллллл   лллл  лл             лл',0ah, 0dh
      db' лл            лл     лллллллл лл      лл      лл       лл лл лл             лл',0ah, 0dh
      db' лл            лл     лл    лл лл      лл      лл       лл  лллл             лл',0ah, 0dh
      db' лл            лл     лл    лл ллллллл ллллллл лллллллл лл    лл             лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл           лл        лл   лллллл   лллллллл   ллллллл    ллллллл          лл',0ah, 0dh
      db' лл           лл        лл  лл    лл  лл     лл  лл    лл  лл                лл',0ah, 0dh
      db' лл           лл        лл лл      лл лл     лл  лл     лл  ллллллл          лл',0ah, 0dh
      db' лл           лл   лл   лл лл      лл лллллллл   лл     лл        лл         лл',0ah, 0dh
      db' лл            лл лллл лл   лл    лл  лл    лл   лл    лл         лл         лл',0ah, 0dh
      db' лл             лл    лл     лллллл   лл     лл  ллллллл   лллллллл          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah, 0dh
      db'                                                                               ','$'


menu2_7 db'                                                                               ',0ah, 0dh
      db' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah, 0dh
      db' лл            лл       лллл   лл      лл      лл       ллл   лл             лл',0ah, 0dh
      db' лл            лллллл  лл  лл  лл      лл      лллллл   лллл  лл             лл',0ah, 0dh
      db' лл            лл     лллллллл лл      лл      лл       лл лл лл             лл',0ah, 0dh
      db' лл            лл     лл    лл лл      лл      лл       лл  лллл             лл',0ah, 0dh
      db' лл            лл     лл    лл ллллллл ллллллл лллллллл лл    лл             лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл           лл        лл   лллллл   лллллллл   ллллллл    ллллллл          лл',0ah, 0dh
      db' лл           лл        лл  лл    лл  лл     лл  лл    лл  лл                лл',0ah, 0dh
      db' лл           лл        лл лл      лл лл     лл  лл     лл  ллллллл          лл',0ah, 0dh
      db' лл           лл   лл   лл лл      лл лллллллл   лл     лл        лл         лл',0ah, 0dh
      db' лл            лл лллл лл   лл    лл  лл    лл   лл    лл         лл         лл',0ah, 0dh
      db' лл             лл    лл     лллллл   лл     лл  ллллллл   лллллллл          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah, 0dh
      db'                                                                               ','$'


menu2_6 db'                                                                               ',0ah, 0dh
      db' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah, 0dh
      db' лл            лллллл  лл  лл  лл      лл      лллллл   лллл  лл             лл',0ah, 0dh
      db' лл            лл     лллллллл лл      лл      лл       лл лл лл             лл',0ah, 0dh
      db' лл            лл     лл    лл лл      лл      лл       лл  лллл             лл',0ah, 0dh
      db' лл            лл     лл    лл ллллллл ллллллл лллллллл лл    лл             лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл           лл        лл   лллллл   лллллллл   ллллллл    ллллллл          лл',0ah, 0dh
      db' лл           лл        лл  лл    лл  лл     лл  лл    лл  лл                лл',0ah, 0dh
      db' лл           лл        лл лл      лл лл     лл  лл     лл  ллллллл          лл',0ah, 0dh
      db' лл           лл   лл   лл лл      лл лллллллл   лл     лл        лл         лл',0ah, 0dh
      db' лл            лл лллл лл   лл    лл  лл    лл   лл    лл         лл         лл',0ah, 0dh
      db' лл             лл    лл     лллллл   лл     лл  ллллллл   лллллллл          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah, 0dh
      db'                                                                               ','$'


menu2_5 db'                                                                               ',0ah, 0dh
      db' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah, 0dh
      db' лл            лл     лллллллл лл      лл      лл       лл лл лл             лл',0ah, 0dh
      db' лл            лл     лл    лл лл      лл      лл       лл  лллл             лл',0ah, 0dh
      db' лл            лл     лл    лл ллллллл ллллллл лллллллл лл    лл             лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл           лл        лл   лллллл   лллллллл   ллллллл    ллллллл          лл',0ah, 0dh
      db' лл           лл        лл  лл    лл  лл     лл  лл    лл  лл                лл',0ah, 0dh
      db' лл           лл        лл лл      лл лл     лл  лл     лл  ллллллл          лл',0ah, 0dh
      db' лл           лл   лл   лл лл      лл лллллллл   лл     лл        лл         лл',0ah, 0dh
      db' лл            лл лллл лл   лл    лл  лл    лл   лл    лл         лл         лл',0ah, 0dh
      db' лл             лл    лл     лллллл   лл     лл  ллллллл   лллллллл          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah, 0dh
      db'                                                                               ','$'


menu2_4 db'                                                                               ',0ah, 0dh
      db' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah, 0dh
      db' лл            лл     лл    лл лл      лл      лл       лл  лллл             лл',0ah, 0dh
      db' лл            лл     лл    лл ллллллл ллллллл лллллллл лл    лл             лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл           лл        лл   лллллл   лллллллл   ллллллл    ллллллл          лл',0ah, 0dh
      db' лл           лл        лл  лл    лл  лл     лл  лл    лл  лл                лл',0ah, 0dh
      db' лл           лл        лл лл      лл лл     лл  лл     лл  ллллллл          лл',0ah, 0dh
      db' лл           лл   лл   лл лл      лл лллллллл   лл     лл        лл         лл',0ah, 0dh
      db' лл            лл лллл лл   лл    лл  лл    лл   лл    лл         лл         лл',0ah, 0dh
      db' лл             лл    лл     лллллл   лл     лл  ллллллл   лллллллл          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah, 0dh
      db'                                                                               ','$'


menu2_3 db'                                                                               ',0ah, 0dh
      db' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah, 0dh
      db' лл            лл     лл    лл лл      лл      лл       лл  лллл             лл',0ah, 0dh
      db' лл            лл     лл    лл ллллллл ллллллл лллллллл лл    лл             лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл           лл        лл   лллллл   лллллллл   ллллллл    ллллллл          лл',0ah, 0dh
      db' лл           лл        лл  лл    лл  лл     лл  лл    лл  лл                лл',0ah, 0dh
      db' лл           лл        лл лл      лл лл     лл  лл     лл  ллллллл          лл',0ah, 0dh
      db' лл           лл   лл   лл лл      лл лллллллл   лл     лл        лл         лл',0ah, 0dh
      db' лл            лл лллл лл   лл    лл  лл    лл   лл    лл         лл         лл',0ah, 0dh
      db' лл             лл    лл     лллллл   лл     лл  ллллллл   лллллллл          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah, 0dh
      db'                                                                               ','$'



menu2_2 db'                                                                               ',0ah, 0dh
      db' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah, 0dh
      db' лл            лл     лл    лл ллллллл ллллллл лллллллл лл    лл             лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл           лл        лл   лллллл   лллллллл   ллллллл    ллллллл          лл',0ah, 0dh
      db' лл           лл        лл  лл    лл  лл     лл  лл    лл  лл                лл',0ah, 0dh
      db' лл           лл        лл лл      лл лл     лл  лл     лл  ллллллл          лл',0ah, 0dh
      db' лл           лл   лл   лл лл      лл лллллллл   лл     лл        лл         лл',0ah, 0dh
      db' лл            лл лллл лл   лл    лл  лл    лл   лл    лл         лл         лл',0ah, 0dh
      db' лл             лл    лл     лллллл   лл     лл  ллллллл   лллллллл          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah, 0dh
      db'                                                                               ','$'


menu2_1 db'                                                                               ',0ah, 0dh
      db' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл           лл        лл   лллллл   лллллллл   ллллллл    ллллллл          лл',0ah, 0dh
      db' лл           лл        лл  лл    лл  лл     лл  лл    лл  лл                лл',0ah, 0dh
      db' лл           лл        лл лл      лл лл     лл  лл     лл  ллллллл          лл',0ah, 0dh
      db' лл           лл   лл   лл лл      лл лллллллл   лл     лл        лл         лл',0ah, 0dh
      db' лл            лл лллл лл   лл    лл  лл    лл   лл    лл         лл         лл',0ah, 0dh
      db' лл             лл    лл     лллллл   лл     лл  ллллллл   лллллллл          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лл                                                                          лл',0ah, 0dh
      db' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah, 0dh
      db'                                                                               ','$'


ani1 db   '                                                                               ',0ah,0dh
     db   ' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah,0dh
     db   ' лл                                                                          лл',0ah,0dh
     db   ' лл                                                                          лл',0ah,0dh
     db   ' лл                                                                          лл',0ah,0dh
     db   ' лл лм   мл  млм  ллллл лллл     млллм    л     л  млм  л    л мл лллл ллллм лл',0ah,0dh
     db   ' лл ллм млл млплм   млп л       олллллн   л     л млплм л    лмл  л    л   л лл',0ah,0dh
     db   ' лл лплмлпл л   л  млп  ллл      плллп    л млм л л   л л    ллм  ллл  ллллм лл',0ah,0dh
     db   ' лл л плп л ллллл млп   л          л      лмл лмл ллллл л    л лм л    л   л лл',0ah,0dh
     db   ' лл л     л л   л ллллл лллл     млллм    плп плп л   л лллл л  л лллл л   л лл',0ah,0dh
     db   ' лл                             мл л лм                                      лл',0ah,0dh
     db   ' лл                            мл  л  л                                      лл',0ah,0dh
     db   ' лл                               млм                                        лл',0ah,0dh
     db   ' лл                              млплм                                       лл',0ah,0dh
     db   ' лл                             мл   лм                                      лл',0ah,0dh
     db   ' лл                            мл     л                                      лл',0ah,0dh
     db   ' лл                           мл     мл                                      лл',0ah,0dh
     db   ' лл                                                                          лл',0ah,0dh
     db   ' лл                                                                          лл',0ah,0dh
     db   ' лл         [P] PLAY    [I] INSTRUCTION    [M] MAIN MENU    [E] EXIT         лл',0ah,0dh
     db   ' лл                                                                          лл',0ah,0dh
     db   ' лл                                                                          лл',0ah,0dh
     db   ' лл                                                                          лл',0ah,0dh
     db   ' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah,0dh,'$'

ani2 db   '                                                                               ',0ah,0dh
     db   ' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah,0dh
     db   ' лл                                                                          лл',0ah,0dh
     db   ' лл                                                                          лл',0ah,0dh
     db   ' лл                                                                          лл',0ah,0dh
     db   ' лл лм   мл  млм  ллллл лллл     млллм    л     л  млм  л    л мл лллл ллллм лл',0ah,0dh
     db   ' лл ллм млл млплм   млп л       олллллн   л     л млплм л    лмл  л    л   л лл',0ah,0dh
     db   ' лл лплмлпл л   л  млп  ллл      плллп    л млм л л   л л    ллм  ллл  ллллм лл',0ah,0dh
     db   ' лл л плп л ллллл млп   л          л      лмл лмл ллллл л    л лм л    л   л лл',0ah,0dh
     db   ' лл л     л л   л ллллл лллл     млллм    плп плп л   л лллл л  л лллл л   л лл',0ah,0dh
     db   ' лл                             мл л лм                                      лл',0ah,0dh
     db   ' лл                            мл  л  л                                      лл',0ah,0dh
     db   ' лл                                л                                         лл',0ah,0dh
     db   ' лл                                л                                         лл',0ah,0dh
     db   ' лл                                л                                         лл',0ah,0dh
     db   ' лл                                л                                         лл',0ah,0dh
     db   ' лл                                л                                         лл',0ah,0dh
     db   ' лл                                                                          лл',0ah,0dh
     db   ' лл                                                                          лл',0ah,0dh
     db   ' лл         [P] PLAY    [I] INSTRUCTION    [M] MAIN MENU    [E] EXIT         лл',0ah,0dh
     db   ' лл                                                                          лл',0ah,0dh
     db   ' лл                                                                          лл',0ah,0dh
     db   ' лл                                                                          лл',0ah,0dh
     db   ' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah,0dh,'$'


map1    db   '                                                                               ',0ah,0dh
        db   ' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah,0dh
        db   ' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah,0dh
        db   ' ллллллллл      л л       л   л л лл       л        лл л лллл ллллллллллллллллл',0ah,0dh
        db   ' ллллллллллл лл л л ллллл лл л     л л л лллллллллл                  лллллллллл',0ah,0dh
        db   ' ллллллллл л лл л   л        л л ллл л л   л        лл лллл ллл ллллллллллллллл',0ah,0dh
        db   ' ллллллллл л лл ллл лллллллллллл л л ллл лллллллллл ллллллл ллл      лллллллллл',0ah,0dh
        db   ' ллллллллл л л      л          л   л   л          л      лл   л лл л лллллллллл',0ah,0dh
        db   ' ллллллллл л лллллллл ллл лллл ллл л л лллллллллл лллл л лллллл ллллллллллллллл',0ah,0dh
        db   ' ллллллллл        ллл   л    л       л  л л     л л    л л л       лллллллллллл',0ah,0dh
        db   ' лллллллллллллллл л л л ллллллллллллллллл ллллл л лллллл л л лллллллллллллллллл',0ah,0dh
        db   ' ллллллллл      л   л л л     лллл л              лл     л л     л  ћлллллллллл',0ah,0dh
        db   ' ллллллллл лллл л ллл ллллллл    л л лллллл лллллллллллл л л ллллл лллллллллллл',0ah,0dh
        db   ' ллллллллл л      л       ллл лл л л     л    л          л л       лллллллллллл',0ah,0dh
        db   ' ллллллллл л лллллллллллл   л лл л л лллллллллл лллллллллл ллллллл   лллллллллл',0ah,0dh
        db   ' ллллллллллл лл    лл  лл ллл лл     л        л            л     л лллллллллллл',0ah,0dh
        db   ' ллллллллл   лл ллл       л   лллллллллл лллл лллллл ллллллллллл л  ллллллллллл',0ah,0dh
        db   ' ллллллллл л л    л лл лллллл     лл     л    л    л             л лллллллллллл',0ah,0dh
        db   ' ллллллллл л лллл л лл л      лллллл лллллллл лл ллл ллллллллллл л лллллллллллл',0ah,0dh
        db   ' ллллллллллл        лл лллллл              лл             лл     л   лллллллллл',0ah,0dh
        db   ' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah,0dh
        db   ' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah,0dh
        db   ' лллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah,0dh
        db   '                                                                               ',0ah,0dh,'$'



map2 db   '                                                                              ',0ah,0dh
     db   ' ллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah, 0dh
     db   ' л      л л ллл   л     л л   л   л      ллл   л   л       л         л       л',0ah, 0dh
     db   ' л лллл л     л л л ллл л ллл л л лллллл л   л ллл ллллл л л л ллллл л ллллл л',0ah, 0dh
     db   ' л лл л ллл ллл л   л   л   л л л      л ллл л     л   л л л л     л л л     л',0ah, 0dh
     db   ' л л  л л   л   ллл л ллл ллл л лллллл л л л л ллллллл л л л л л ллл   лллл лл',0ah, 0dh
     db   ' л лл л л л ллл   л л         л    л   л л   л л     л л л   л л ллллл л лл  л',0ah, 0dh
     db   ' л    л   л   ллл л л ллллллллл лл л ллл л л л ллллл л л ллллл л л   л    лллл',0ah, 0dh
     db   ' лл ллллл ллл л   л л     л      л л     л   л    лл л л л     л л л ллллллл л',0ah, 0dh
     db   ' лл л   л   л л ллл л ллл ллллл лл л ллллллл лллл  л   л л ллллллл л ллл л л л',0ah, 0dh
     db   ' л  л л ллл л л л   л л л л   л л  л       л л  л лл ллл л         л л       л',0ah, 0dh
     db   ' л лл л   л   л л ллллл   л ллл лл ллллллл л л лл лл     ллллллллллл ллллллл л',0ah, 0dh
     db   ' л    л л ллл л л   л ллл л   л л   л   лл   л     л ллллл           л     л л',0ah, 0dh
     db   ' лл ллл л   л л ллл л     ллл л л л л л лллллл ллл л     л лллллл лллллл л л л',0ah, 0dh
     db   ' лл   ллл ллл л л л л ллллллл л л л л л л   л  л л л ллл л      л      л л   л',0ah, 0dh
     db   ' лллл ллл     л   л л    л      л л л л л л лл л л л   л л лллллл лллллл ллллл',0ah, 0dh
     db   ' л  л л ллл ллллл л ллл лл лллллл л л л л л  л л л ллл л л      л л         лл',0ah, 0dh
     db   ' л л  л л   л л   л   л л         ллл л л л лл л ллл л л лллллл ллл ллллллл  л',0ah, 0dh
     db   ' л л лл л ллл л ллллл л ллллллллл     л л л л        л л      л     л л     лл',0ah, 0dh
     db   ' л л    л л   л    л  л         л ллллл л лллллллллл л л лллллл л л л л лллллл',0ah, 0dh
     db   ' л лллл   л л л лллл лл ллллллл л л     л      л   л л л   л    ллл л л  л   л',0ah, 0dh
     db   ' л      л л л л л    л     ллл    л ллллл лл л л ллл   л л л лллл л   лл л л л',0ah, 0dh
     db   ' лллл л л   л   лллллл ллл   лллл   л      л л   л   л ллл л      ллл л    лћл',0ah, 0dh
     db   ' ллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллллл',0ah, 0dh,'$'
		

drct1 db'                                                                          ',0ah,0dh
      db'      ЩЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЛ',0ah,0dh
      db'      К                   FALLEN WORDS INSTRUCTIONS:                     К',0ah,0dh
      db'      К                                                                  К',0ah,0dh
      db'      К                                                                  К',0ah,0dh
      db'      К  * There were 50 words falling and stacking up filling up the    К',0ah,0dh
      db'      К   screen Try to STOP the words from hit the bottom and stacking  К',0ah,0dh
      db'      К                    up to the top by TYPING                       К',0ah,0dh
      db'      К                                                                  К',0ah,0dh
      db'      К                                                                  К',0ah,0dh
      db'      К * Hit SPACE BAR or ENTER KEY after typing the word to enter the  К',0ah,0dh
      db'      К      word and pop the falling word before hitting the bottom.    К',0ah,0dh
      db'      К                                                                  К',0ah,0dh
      db'      К                                                                  К',0ah,0dh                              
      db'      К * Hit ESCAPE BUTTON to exit the game to main menu.               К',0ah,0dh
      db'      К                                                                  К',0ah,0dh
      db'      К                                                                  К',0ah,0dh
      db'      К                                                                  К',0ah,0dh
      db'      ШЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭМ',0ah,0dh
      db'      ЩЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЛ',0ah,0dh
      db'      К                                                                  К',0ah,0dh
      db'      К            [B] Back               [M] Main Menu                  К',0ah,0dh
      db'      К                                                                  К',0ah,0dh
      db'      ШЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭЭМ',0ah,0dh
      db'					                          	','$'


maze_i db '                                                                   ',0ah,0dh
       db '                                                                   ',0ah,0dh
       db '       АААААААААААААААААААААААААААААААААААААААААААААААААААААААААААА',0ah,0dh
       db '       А                                                          А',0ah,0dh
       db '       А                  MAZE WALKER INSTRUCTION                 А',0ah,0dh
       db '       А                                                          А',0ah,0dh
       db '       А * The Maze Walker is compose of 3 levels is just all     А',0ah,0dh
       db '       А   about clearing the game by reaching the exit.          А',0ah,0dh
       db '       А                                                          А',0ah,0dh
       db '       А * You can use either W,A,S,D or ARROW KEYS to navigate   А',0ah,0dh
       db '       А           your character throughout the maze.            А',0ah,0dh
       db '       А                                                          А',0ah,0dh
       db '       А *Hit ESC to exit to Main Menu while you are in game.     А',0ah,0dh
       db '       А                                                          А',0ah,0dh
       db '       А                                                          А',0ah,0dh
       db '       А                                                          А',0ah,0dh
       db '       АААААААААААААААААААААААААААААААААААААААААААААААААААААААААААА',0ah,0dh
       db '       А              [B] Back          [M] Main Menu             А',0ah,0dh
       db '       АААААААААААААААААААААААААААААААААААААААААААААААААААААААААААА',0ah,0dh,'$'


cred1 db'                                                                            ','$'
cred2 db'                                  MDC GAMES                                 ','$'
cred3 db'                                 Fallen Words                               ','$'
cred4 db'                                  Maze Walker                               ','$'
cred5 db'                                 PROGRAMMED BY                              ','$'
cred6 db'                           MAINIT, MIKE DAVID CLARK                         ','$'
cred7 db'                  PROif e jmpCT FOR ASSEMBLY LANGUAGE PROGRAMMING           ','$'
cred8 db'                                 INSTRUCTED BY                              ','$'
cred9 db'                             ENGINEER JULIUS CASTRO                         ','$'
cred10 db'                               [B] Back To Menu                             ','$'



																																														;mao niy i.print nato para boarder sa duwa na jud
brdr1 db 78 dup(219),'$'																																					;219 kay equal na sa ASCII nga '?'
brdr2 db  1 dup(219), 18 dup (32), 1 dup(219), 38 dup(32), 1 dup(219), 18 dup(32), 1 dup(219),'$'							
brdr3 db  1 dup(219), 18 dup(32), 40 dup(219), 18 dup(32), 1 dup(219)'$'
words1 db 'Do you really want to quit the game? (Y/N)','$'

word1 db 'fiery','$'
word2 db 'piece','$'
word3 db 'bureau','$'
word4 db 'rhythm','$'
word5 db 'license','$'
word6 db 'absence','$'
word7 db 'odyssey','$'
word8 db 'believe','$'
word9 db 'ceiling','$'
word10 db 'ecstasy','$'
word11 db 'science','$'
word12 db 'foreign','$'
word13 db 'leisure','$'
word14 db 'precede','$'
word15 db 'address','$'
word16 db 'pumpkin','$'
word17 db 'thorough','$'
word18 db 'broccoli','$'
word19 db 'definite','$'
word20 db 'exercise','$'
word21 db 'misspell','$'
word22 db 'neighbor','$'
word23 db 'occasion','$'
word24 db 'mediocre','$'
word25 db 'judgment','$'
word26 db 'beginning','$'
word27 db 'fascinate','$'
word28 db 'knowledge','$'
word29 db 'embarrass','$'
word30 db 'prejudice','$'
word31 db 'miniature','$'
word32 db 'necessary','$'
word33 db 'privilege','$'
word34 db 'raspberry','$'
word35 db 'guarantee','$'
word36 db 'mysterious','$'
word37 db 'changeable','$'
word38 db 'disastrous','$'
word39 db 'occurrence','$'
word40 db 'government','$'
word41 db 'millennium','$'
word42 db 'playwright','$'
word43 db 'mathematics','$'
word44 db 'maintenance','$'
word45 db 'camaraderie','$'
word46 db 'fluorescent','$'
word47 db 'mischievous','$'
word48 db 'sacrilegious','$'
word49 db 'miscellaneous','$'
word50 db 'conscientious','$'

num_let db ?
midp db ?
midp1 db ?
base db ?
c_base db ?
kybd db 50 dup('$')
looper1 db ?
counter1 db ?
winner db 'You Win','$'
loser db 'You Lose','$'
typed db ?
delaytime db ?
row db ?
col db ?
string1 db '','$'
ecol db ?

main proc near
begin:
call print
main_menu:
call main_menu1
call select
jmp stop

print:
call menu_color
mov ah, 09h
lea dx, menu1
int 21h

call delay_m

call menu_color
mov ah, 09h
lea dx, menu1_1
int 21h

call delay_m

call menu_color
mov ah, 09h
lea dx, menu1_2
int 21h

call delay_m

call menu_color
mov ah, 09h
lea dx, menu1_3
int 21h

call delay_m
ret
main_menu1:
call menu_color
mov ah, 09h
lea dx, menu1_4
int 21h
ret
			;checking the keyboard
select:
	mov ah, 07h
	int 21h

	cmp al, 'A'
	if e jmp typing
	cmp al, 'a'
	if e jmp typing
	cmp al,'C'
	if e jmp credits
	cmp al,'c'
	if e jmp credits
	cmp al, 'B'
	if e jmp maze
	cmp al, 'b'
	if e jmp maze
	cmp al, 'E'
	if e jmp exit
	cmp al, 'e'
	if e jmp exit
	if ne jmp main_menu
ret

stop:	

	mov ah, 00h  ;read key from keyboard ASCII
	int 16h

	mov ah, 00h
	mov al, mode
	int 10h

	mov ax, 4c00h
	int 21h

main endp
play proc near			;maghimo sa tag frame
	mov ax, 0600h ;scroll functions with color nga gray background , pwede man pud usbon
	mov bh, 71h
	mov cx, 0000h
	mov dh, 24
	mov dl, 79
	int 10h

	mov ah, 02h ;set cursor
	mov dh, 1
	mov dl, 1
	mov bh,00h
	int 10h

	mov ah, 09h 	;call tong boarder nato nga g.declare
	lea dx, brdr1
	int 21h

	mov ah, 02h	
	mov dh, 2
	mov dl, 1
	mov bh,00h
	int 10h

	mov ah, 09h
	lea dx, brdr2
	int 21h
	
	mov ah, 02h
	mov dh, 3
	mov dl, 1
	mov bh,00h
	int 10h

	mov ah, 09h
	lea dx, brdr2
	int 21h
	
	mov ah, 02h
	mov dh, 4
	mov dl, 1
	mov bh,00h
	int 10h

	mov ah, 09h
	lea dx, brdr2
	int 21h
	
		mov ah, 02h
	mov dh, 5
	mov dl, 1
	mov bh,00h
	int 10h

	mov ah, 09h
	lea dx, brdr2
	int 21h
	
	mov ah, 02h
	mov dh, 6
	mov dl, 1
	mov bh,00h
	int 10h

	mov ah, 09h
	lea dx, brdr2
	int 21h

	mov ah, 02h
	mov dh, 7
	mov dl, 1
	mov bh,00h
	int 10h
	
	mov ah, 09h
	lea dx, brdr2
	int 21h

	mov ah, 02h ;cursor position  
	mov dh, 8     ;row
	mov dl, 1   ;column
	mov bh,00h 
	int 10h

	mov ah, 09h
	lea dx, brdr2
	int 21h

	mov ah, 02h
	mov dh, 9
	mov dl, 1
	mov bh,00h
	int 10h

	mov ah, 09h
	lea dx, brdr2
	int 21h

	mov ah, 02h
	mov dh, 10
	mov dl, 1
	mov bh,00h
	int 10h

	mov ah, 09h
	lea dx, brdr2
	int 21h

	mov ah, 02h
	mov dh, 11
	mov dl, 1
	mov bh,00h
	int 10h

	mov ah, 09h
	lea dx, brdr2
	int 21h

	mov ah, 02h
	mov dh, 12
	mov dl, 1
	mov bh,00h
	int 10h

	mov ah, 09h
	lea dx, brdr2
	int 21h

	mov ah, 02h
	mov dh, 13
	mov dl, 1
	mov bh,00h
	int 10h

	mov ah, 09h
	lea dx, brdr2
	int 21h

	mov ah, 02h
	mov dh, 14
	mov dl, 1
	mov bh,00h
	int 10h

	mov ah, 09h
	lea dx, brdr2
	int 21h

	mov ah, 02h
	mov dh, 15
	mov dl, 1
	mov bh,00h
	int 10h

	mov ah, 09h
	lea dx, brdr2
	int 21h

	mov ah, 02h
	mov dh, 16
	mov dl, 1
	mov bh,00h
	int 10h

	mov ah, 09h
	lea dx, brdr2
	int 21h

	mov ah, 02h
	mov dh, 17
	mov dl, 1
	mov bh,00h
	int 10h

	mov ah, 09h
	lea dx, brdr2
	int 21h

	mov ah, 02h
	mov dh, 18
	mov dl, 1
	mov bh,00h
	int 10h

	mov ah, 09h
	lea dx, brdr2
	int 21h

	mov ah, 02h
	mov dh, 19
	mov dl, 1
	mov bh,00h
	int 10h

	mov ah, 09h
	lea dx, brdr2
	int 21h
	
	mov ah, 02h
	mov dh, 20
	mov dl, 1
	mov bh,00h
	int 10h

	mov ah, 09h
	lea dx, brdr2
	int 21h
	
	mov ah, 02h
	mov dh, 21
	mov dl, 1
	mov bh,00h
	int 10h

	mov ah, 09h
	lea dx, brdr3
	int 21h

	mov ah, 02h
	mov dh, 22
	mov dl, 1
	mov bh,00h
	int 10h

	mov ah, 09h
	lea dx, brdr2
	int 21h
	
	mov ah, 02h
	mov dh, 23
	mov dl, 1
	mov bh,00h
	int 10h

	mov ah, 09h		;mao ning base sa atong gameframe
	lea dx, brdr1
	int 21h
	
	
	mov base, 21			;max drop location sa word
	mov c_base, 20
word_drop1:

	mov midp, 40			;katunga sa column
	mov num_let, 5		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al		;mao niy gidaghanon sa loop nga paspas kaayo bag.o mudrop ang word
	mov counter1, 00h	;mao niy mag.increament hangtod mag.equal sa looper..
	mov typed, 3		;row position sa imong g.input nga letter
	
drop:	

	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word1
	int 21h
	
check:

	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h

	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow
					;interrupts for keyboard input unya isud niya ug al..
	mov ah, 07h		
	int 21h
	
	cmp al, 1bh			;if ESC iyang g.pindot, balik siya sa main menu.
	if e jmp main_menu
	cmp al, 8
	if e jmp bs1
	jmp ok1
bs1:
	cmp typed, 3
	if e jmp bss1
	dec typed
bss1:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow
ok1:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed

	cmp al, 13			;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a
	cmp al, 20h
	if ne jmp slow
check1_1a:
	mov si, 0000h
	mov typed, 3
check1_1:
	cmp word1[si], '$'
	if e jmp win
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word1[si], al
	if ne jmp continue

	inc si
	jmp check1_1
continue:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx, 1603h
	mov dh, 22
	mov dl, 10
	int 10h

	
slow:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop			;if dili equal, mu.loop cya..
	if e jmp ch_base1
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
		
	cmp al, 20h
	if e jmp word_drop2
	cmp al, 13
	if ne jmp continue
	if e jmp word_drop2
	
ch_base1:
	dec base
	dec c_base

	jmp word_drop2
	


word_drop2:
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 5		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop2:
	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word2
	int 21h
	
check2:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow2
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h

	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs2
	jmp ok2
bs2:

	cmp typed, 3
	if e jmp bss2
	dec typed
bss2:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow2
ok2:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			 ;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a2
	cmp al, 20h
	if ne jmp slow2
check1_1a2:
	mov si, 0000h
	mov typed, 3
check1_12:
	cmp word2[si], '$'
	if e jmp win2
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word2[si], al
	if ne jmp continue2

	inc si
	jmp check1_12
continue2:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

slow2:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check2
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop2			;if dili equal, mu.loop cya..
	if e jmp ch_base2
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win2:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
		
	cmp al, 20h
	if e jmp word_drop3
	cmp al, 13
	if ne jmp continue2
	if e jmp word_drop3
	
ch_base2:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop3
	
word_drop3:
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 6		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop3:
	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word3
	int 21h
	
check3:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow3
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h

	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs3
	jmp ok3
bs3:
	cmp typed, 3
	if e jmp bss3
	dec typed
bss3:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow3
ok3:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			 ;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a3
	cmp al, 20h
	if ne jmp slow3
check1_1a3:
	mov si, 0000h
	mov typed, 3
check1_13:
	cmp word3[si], '$'
	if e jmp win3
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word3[si], al
	if ne jmp continue3

	inc si
	jmp check1_13
continue3:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

slow3:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check3
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop3			;if dili equal, mu.loop cya..
	if e jmp ch_base3
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win3:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
		
	cmp al, 20h
	if e jmp word_drop4
	cmp al, 13
	if ne jmp continue3
	if e jmp word_drop4
	
ch_base3:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop4
	
word_drop4:

	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 6		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop4:	

	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word4
	int 21h
	
check4:

	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow4
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h
	
	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs4
	jmp ok4
bs4:
	cmp typed, 3
	if e jmp bss4
	dec typed
bss4:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow4
ok4:

	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a4
	cmp al, 20h
	if ne jmp slow4
check1_1a4:
	mov si, 0000h
	mov typed, 3
check1_14:
	cmp word4[si], '$'
	if e jmp win4
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word4[si], al
	if ne jmp continue4

	inc si
	jmp check1_14
continue4:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	
slow4:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check4
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop4			;if dili equal, mu.loop cya..
	if e jmp ch_base4
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win4:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop5
	cmp al, 13
	if ne jmp continue4
	if e jmp word_drop5
	
ch_base4:
	dec base
	dec c_base
	cmp base, 2
	if e jmp gg
	jmp word_drop5
	
	int 20h
	
word_drop5:

	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 7		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop5:	

	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word5
	int 21h
	
check5:

	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow5
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h

	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs5
	jmp ok5
bs5:
	cmp typed, 3
	if e jmp bss5
	dec typed
bss5:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow5
ok5:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a5
	cmp al, 20h
	if ne jmp slow5
check1_1a5:
	mov si, 0000h
	mov typed, 3
check1_15:
	cmp word5[si], '$'
	if e jmp win5
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word5[si], al
	if ne jmp continue5

	inc si
	jmp check1_15
continue5:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	
slow5:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check5
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop5			;if dili equal, mu.loop cya..
	if e jmp ch_base5
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win5:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop6	
	cmp al, 13
	if ne jmp continue5
	if e jmp word_drop6
	
ch_base5:
	dec base
	dec c_base
	cmp base, 2
	if e jmp gg
	jmp word_drop6
	
	int 20h
	
word_drop6:

	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 7		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop6:	

	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word6
	int 21h
	
check6:

	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow6
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h

	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs6
	jmp ok6
bs6:
	cmp typed, 3
	if e jmp bss6
	dec typed
bss6:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow6
ok6:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a6
	cmp al, 20h
	if ne jmp slow6
check1_1a6:
	mov si, 0000h
	mov typed, 3
check1_16:
	cmp word6[si], '$'
	if e jmp win6
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word6[si], al
	if ne jmp continue6

	inc si
	jmp check1_16
continue6:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	
slow6:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check6
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop6			;if dili equal, mu.loop cya..
	if e jmp ch_base6
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win6:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop7	
	cmp al, 13
	if ne jmp continue6
	if e jmp word_drop7
	
ch_base6:
	dec base
	dec c_base
	cmp base, 2
	if e jmp gg
	jmp word_drop7
	
	int 20h
	
word_drop7:

	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 7		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop7:	

	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word7
	int 21h
	
check7:

	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow7
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h

	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs7
	jmp ok7
bs7:
	cmp typed, 3
	if e jmp bss7
	dec typed
bss7:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow7
ok7:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a7
	cmp al, 20h
	if ne jmp slow7
check1_1a7:
	mov si, 0000h
	mov typed, 3
check1_17:
	cmp word7[si], '$'
	if e jmp win7
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word7[si], al
	if ne jmp continue7

	inc si
	jmp check1_17
continue7:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	
slow7:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check7
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop7			;if dili equal, mu.loop cya..
	if e jmp ch_base7
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win7:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop8	
	cmp al, 13
	if ne jmp continue7
	if e jmp word_drop8
	
ch_base7:
	dec base
	dec c_base
	cmp base, 2
	if e jmp gg
	
	jmp word_drop8
	
	int 20h
	
word_drop8:

	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 7		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop8:	

	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word8
	int 21h
	
check8:

	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow8
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h

	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs8
	jmp ok8
bs8:	
	cmp typed, 3
	if e jmp bss8
	dec typed
bss8:	
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow8
ok8:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a8
	cmp al, 20h
	if ne jmp slow8
check1_1a8:
	mov si, 0000h
	mov typed, 3
check1_18:
	cmp word8[si], '$'
	if e jmp win8
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word8[si], al
	if ne jmp continue8

	inc si
	jmp check1_18
continue8:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	
slow8:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check8
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop8			;if dili equal, mu.loop cya..
	if e jmp ch_base8
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win8:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop9	
	cmp al, 13
	if ne jmp continue8
	if e jmp word_drop9
	
ch_base8:
	dec base
	dec c_base
	cmp base, 2
	if e jmp gg
	jmp word_drop9
	
	int 20h
	
word_drop9:

	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 7		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop9:	

	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word9
	int 21h
	
check9:

	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow9
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h

	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs9
	jmp ok9
bs9:
	cmp typed, 3
	if e jmp bss9
	dec typed
bss9:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow9
ok9:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a9
	cmp al, 20h
	if ne jmp slow9
check1_1a9:
	mov si, 0000h
	mov typed, 3
check1_19:
	cmp word9[si], '$'
	if e jmp win9
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word9[si], al
	if ne jmp continue9

	inc si
	jmp check1_19
continue9:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	
slow9:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check9
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop9			;if dili equal, mu.loop cya..
	if e jmp ch_base9
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win9:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop10	
	cmp al, 13
	if ne jmp continue9
	if e jmp word_drop10
	
ch_base9:
	dec base
	dec c_base
	cmp base, 2
	if e jmp gg
	jmp word_drop10
	
	int 20h
	
word_drop10:

	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 7		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop10:	

	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word10
	int 21h
	
check10:

	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow10
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h

	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs10
	jmp ok10
bs10:
	cmp typed, 3
	if e jmp bss10
	dec typed
bss10:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow10
ok10:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a10
	cmp al, 20h
	if ne jmp slow10
check1_1a10:
	mov si, 0000h
	mov typed, 3
check1_110:
	cmp word10[si], '$'
	if e jmp win10
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word10[si], al
	if ne jmp continue10

	inc si
	jmp check1_110
continue10:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	
slow10:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check10
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop10			;if dili equal, mu.loop cya..
	if e jmp ch_base10
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win10:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop11	
	cmp al, 13
	if ne jmp continue10
	if e jmp word_drop11
	
ch_base10:
	dec base
	dec c_base
	cmp base, 2
	if e jmp gg
	jmp word_drop11
	
	int 20h
	
word_drop11:

	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 7		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop11:	

	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word11
	int 21h
	
check11:

	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow11
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h

	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs11
	jmp ok11
bs11:
	cmp typed, 3
	if e jmp bss11
	dec typed
bss11:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow11
ok11:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a11
	cmp al, 20h
	if ne jmp slow11
check1_1a11:
	mov si, 0000h
	mov typed, 3
check1_111:
	cmp word11[si], '$'
	if e jmp win11
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word11[si], al
	if ne jmp continue11

	inc si
	jmp check1_111
continue11:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	
slow11:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check11
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop11			;if dili equal, mu.loop cya..
	if e jmp ch_base11
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win11:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop12
	cmp al, 13
	if ne jmp continue11
	if e jmp word_drop12
	
ch_base11:
	dec base
	dec c_base
	cmp base, 2
	if e jmp gg
	jmp word_drop12
	
word_drop12:

	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 7		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop12:	

	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word12
	int 21h
	
check12:

	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow12
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h

	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs12
	jmp ok12
bs12:
	cmp typed, 3
	if e jmp bss12
	dec typed
bss12:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow12
ok12:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a12
	cmp al, 20h
	if ne jmp slow12
check1_1a12:
	mov si, 0000h
	mov typed, 3
check1_112:
	cmp word12[si], '$'
	if e jmp win12
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word12[si], al
	if ne jmp continue12

	inc si
	jmp check1_112
continue12:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	
slow12:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check12
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop12			;if dili equal, mu.loop cya..
	if e jmp ch_base12
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win12:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop13	
	cmp al, 13
	if ne jmp continue12
	if e jmp word_drop13
	
ch_base12:
	dec base
	dec c_base
	cmp base, 2
	if e jmp gg
	jmp word_drop13
	
	int 20h
	
word_drop13:

	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 7		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop13:	

	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word13
	int 21h
	
check13:

	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow13
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h

	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs13
	jmp ok13
bs13:
	cmp typed, 3
	if e jmp bss13
	dec typed
bss13:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow13
ok13:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a13
	cmp al, 20h
	if ne jmp slow13
check1_1a13:
	mov si, 0000h
	mov typed, 3
check1_113:
	cmp word13[si], '$'
	if e jmp win13
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word13[si], al
	if ne jmp continue13

	inc si
	jmp check1_113
continue13:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	
slow13:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check13
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop13			;if dili equal, mu.loop cya..
	if e jmp ch_base13
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win13:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop14	
	cmp al, 13
	if ne jmp continue13
	if e jmp word_drop14
	
ch_base13:
	dec base
	dec c_base
	cmp base, 2
	if e jmp gg
	jmp word_drop14
	
	int 20h
	
word_drop14:

	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 7		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop14:	

	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word14
	int 21h
	
check14:

	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow14
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h

	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs14
	jmp ok14
bs14:
	cmp typed, 3
	if e jmp bss14
	dec typed
bss14:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow14
ok14:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a14
	cmp al, 20h
	if ne jmp slow14
check1_1a14:
	mov si, 0000h
	mov typed, 3
check1_114:
	cmp word14[si], '$'
	if e jmp win14
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word14[si], al
	if ne jmp continue14

	inc si
	jmp check1_114
continue14:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	
slow14:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check14
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop14			;if dili equal, mu.loop cya..
	if e jmp ch_base14
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win14:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop15	
	cmp al, 13
	if ne jmp continue14
	if e jmp word_drop15
	
ch_base14:
	dec base
	dec c_base
	cmp base, 2
	if e jmp gg
	jmp word_drop15

word_drop15:

	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 7		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop15:	

	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word15
	int 21h
	
check15:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow15
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h

	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs15
	jmp ok15
bs15:
	cmp typed, 3
	if e jmp bss15
	dec typed
bss15:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow15
ok15:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a15
	cmp al, 20h
	if ne jmp slow15
check1_1a15:
	mov si, 0000h
	mov typed, 3
check1_115:
	cmp word15[si], '$'
	if e jmp win15
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word15[si], al
	if ne jmp continue15

	inc si
	jmp check1_115
continue15:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	
slow15:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check15
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop15			;if dili equal, mu.loop cya..
	if e jmp ch_base15
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win15:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop16	
	cmp al, 13
	if ne jmp continue15
	if e jmp word_drop16
	
ch_base15:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop16

word_drop16:

	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 7		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop16:	

	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word16
	int 21h
	
check16:

	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow16
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h

	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs16
	jmp ok16
bs16:
	cmp typed, 3
	if e jmp bss16
	dec typed
bss16:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow16
ok16:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a16
	cmp al, 20h
	if ne jmp slow16
check1_1a16:
	mov si, 0000h
	mov typed, 3
check1_116:
	cmp word16[si], '$'
	if e jmp win16
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word16[si], al
	if ne jmp continue16

	inc si
	jmp check1_116
continue16:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	
slow16:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check16
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop16			;if dili equal, mu.loop cya..
	if e jmp ch_base16
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win16:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop17	
	cmp al, 13
	if ne jmp continue16
	if e jmp word_drop17
	
ch_base16:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop17

word_drop17:
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 8		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop17:
	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word17
	int 21h
	
check17:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow17
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h

	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs17
	jmp ok17
bs17:
	cmp typed, 3
	if e jmp bss17
	dec typed
bss17:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow17
ok17:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			 ;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a17
	cmp al, 20h
	if ne jmp slow17
check1_1a17:
	mov si, 0000h
	mov typed, 3
check1_117:
	cmp word17[si], '$'
	if e jmp win17
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word17[si], al
	if ne jmp continue17

	inc si
	jmp check1_117
continue17:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

slow17:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check17
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop17			;if dili equal, mu.loop cya..
	if e jmp ch_base17
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win17:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop18	
	cmp al, 13
	if ne jmp continue17
	if e jmp word_drop18
	
ch_base17:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop18
	
word_drop18:
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 8		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop18:
	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word18
	int 21h
	
check18:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow18
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h

	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs18
	jmp ok18
bs18:
	cmp typed, 3
	if e jmp bss18
	dec typed
bss18:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow18
ok18:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			 ;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a18
	cmp al, 20h
	if ne jmp slow18
check1_1a18:
	mov si, 0000h
	mov typed, 3
check1_118:
	cmp word18[si], '$'
	if e jmp win18
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word18[si], al
	if ne jmp continue18

	inc si
	jmp check1_118
continue18:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

slow18:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check18
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop18			;if dili equal, mu.loop cya..
	if e jmp ch_base18
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win18:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop19	
	cmp al, 13
	if ne jmp continue18
	if e jmp word_drop19
	
ch_base18:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop19
	
word_drop19:
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 8		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop19:
	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word19
	int 21h
	
check19:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow19
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h

	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs19
	jmp ok19
bs19:
	cmp typed, 3
	if e jmp bss19
	dec typed
bss19:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow19
ok19:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			 ;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a19
	cmp al, 20h
	if ne jmp slow19
check1_1a19:
	mov si, 0000h
	mov typed, 3
check1_119:
	cmp word19[si], '$'
	if e jmp win19
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word19[si], al
	if ne jmp continue19

	inc si
	jmp check1_119
continue19:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

slow19:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check19
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop19			;if dili equal, mu.loop cya..
	if e jmp ch_base19
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win19:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop20
	cmp al, 13
	if ne jmp continue19
	if e jmp word_drop20
	
ch_base19:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop20
	
word_drop20:
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 8		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop20:
	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word20
	int 21h
	
check20:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow20
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h

	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs20
	jmp ok20
bs20:
	cmp typed, 3
	if e jmp bss20
	dec typed
bss20:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow20
ok20:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			 ;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a20
	cmp al, 20h
	if ne jmp slow20
check1_1a20:
	mov si, 0000h
	mov typed, 3
check1_120:
	cmp word20[si], '$'
	if e jmp win20
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word20[si], al
	if ne jmp continue20

	inc si
	jmp check1_120
continue20:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

slow20:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check20
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop20			;if dili equal, mu.loop cya..
	if e jmp ch_base20
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win20:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop21	
	cmp al, 13
	if ne jmp continue20
	if e jmp word_drop21
	
ch_base20:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop21
	
word_drop21:
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 8		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop21:
	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word21
	int 21h
	
check21:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow21
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h

	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs21
	jmp ok21
bs21:
	cmp typed, 3
	if e jmp bss21
	dec typed
bss21:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow21
ok21:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			 ;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a21
	cmp al, 20h
	if ne jmp slow21
check1_1a21:
	mov si, 0000h
	mov typed, 3
check1_121:
	cmp word21[si], '$'
	if e jmp win21
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word21[si], al
	if ne jmp continue21

	inc si
	jmp check1_121
continue21:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

slow21:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check21
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop21			;if dili equal, mu.loop cya..
	if e jmp ch_base21
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win21:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop22	
	cmp al, 13
	if ne jmp continue21
	if e jmp word_drop22
	
ch_base21:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop22
	
word_drop22:
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 8		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop22:
	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word22
	int 21h
	
check22:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow22
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h

	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs22
	jmp ok22
bs22:
	cmp typed, 3
	if e jmp bss22
	dec typed
bss22:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow22
ok22:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			 ;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a22
	cmp al, 20h
	if ne jmp slow22
check1_1a22:
	mov si, 0000h
	mov typed, 3
check1_122:
	cmp word22[si], '$'
	if e jmp win22
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word22[si], al
	if ne jmp continue22

	inc si
	jmp check1_122
continue22:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

slow22:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check22
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop22			;if dili equal, mu.loop cya..
	if e jmp ch_base22
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win22:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop23	
	cmp al, 13
	if ne jmp continue22
	if e jmp word_drop23
	
ch_base22:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop23
	

word_drop23:
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 8		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop23:
	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word23
	int 21h
	
check23:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow23
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h
	
	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs23
	jmp ok23
bs23:
	cmp typed, 3
	if e jmp bss23
	dec typed
bss23:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow23
ok23:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			 ;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a23
	cmp al, 20h
	if ne jmp slow23
check1_1a23:
	mov si, 0000h
	mov typed, 3
check1_123:
	cmp word23[si], '$'
	if e jmp win23
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word23[si], al
	if ne jmp continue23

	inc si
	jmp check1_123
continue23:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

slow23:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check23
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop23			;if dili equal, mu.loop cya..
	if e jmp ch_base23
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win23:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop24	
	cmp al, 13
	if ne jmp continue23
	if e jmp word_drop24
	
ch_base23:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop24
	
word_drop24:
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 8		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop24:
	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word24
	int 21h
	
check24:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow24
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h
	
	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs24
	jmp ok24
bs24:
	cmp typed, 3
	if e jmp bss24
	dec typed
bss24:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow24
ok24:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			 ;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a24
	cmp al, 20h
	if ne jmp slow24
check1_1a24:
	mov si, 0000h
	mov typed, 3
check1_124:
	cmp word24[si], '$'
	if e jmp win24
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word24[si], al
	if ne jmp continue24

	inc si
	jmp check1_124
continue24:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

slow24:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check24
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop24			;if dili equal, mu.loop cya..
	if e jmp ch_base24
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win24:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop25	
	cmp al, 13
	if ne jmp continue24
	if e jmp word_drop25
	
ch_base24:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop25
	
word_drop25:
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 8		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop25:
	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word25
	int 21h
	
check25:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow25
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h
	
	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs25
	jmp ok25
bs25:
	cmp typed, 3
	if e jmp bss25
	dec typed
bss25:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow25
ok25:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			 ;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a25
	cmp al, 20h
	if ne jmp slow25
check1_1a25:
	mov si, 0000h
	mov typed, 3
check1_125:
	cmp word25[si], '$'
	if e jmp win25
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word25[si], al
	if ne jmp continue25

	inc si
	jmp check1_125
continue25:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

slow25:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check25
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop25			;if dili equal, mu.loop cya..
	if e jmp ch_base25
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win25:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop26	
	cmp al, 13
	if ne jmp continue25
	if e jmp word_drop26
	
ch_base25:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop26
	
word_drop26:
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 9		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop26:
	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word26
	int 21h
	
check26:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow26
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h
	
	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs26
	jmp ok26
bs26:
	cmp typed, 3
	if e jmp bss26
	dec typed
bss26:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow26
ok26:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			 ;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a26
	cmp al, 20h
	if ne jmp slow26
check1_1a26:
	mov si, 0000h
	mov typed, 3
check1_126:
	cmp word26[si], '$'
	if e jmp win26
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word26[si], al
	if ne jmp continue26

	inc si
	jmp check1_126
continue26:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

slow26:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check26
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop26			;if dili equal, mu.loop cya..
	if e jmp ch_base26
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win26:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop27	
	cmp al, 13
	if ne jmp continue26
	if e jmp word_drop27
	
ch_base26:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop27
	
word_drop27:
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 9		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop27:
	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word27
	int 21h
	
check27:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow27
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h
	
	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs27
	jmp ok27
bs27:
	cmp typed, 3
	if e jmp bss27
	dec typed
bss27:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow27
ok27:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			 ;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a27
	cmp al, 20h
	if ne jmp slow27
check1_1a27:
	mov si, 0000h
	mov typed, 3
check1_127:
	cmp word27[si], '$'
	if e jmp win27
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word27[si], al
	if ne jmp continue27

	inc si
	jmp check1_127
continue27:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

slow27:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check27
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop27			;if dili equal, mu.loop cya..
	if e jmp ch_base27
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win27:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop28	
	cmp al, 13
	if ne jmp continue27
	if e jmp word_drop28
	
ch_base27:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop28
	
word_drop28:
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 9		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop28:
	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word28
	int 21h
	
check28:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow28
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h
	
	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs28
	jmp ok28
bs28:
	cmp typed, 3
	if e jmp bss28
	dec typed
bss28:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow28
ok28:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			 ;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a28
	cmp al, 20h
	if ne jmp slow28
check1_1a28:
	mov si, 0000h
	mov typed, 3
check1_128:
	cmp word28[si], '$'
	if e jmp win28
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word28[si], al
	if ne jmp continue28

	inc si
	jmp check1_128
continue28:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

slow28:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check28
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop28			;if dili equal, mu.loop cya..
	if e jmp ch_base28
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win28:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop29	
	cmp al, 13
	if ne jmp continue28
	if e jmp word_drop29
	
ch_base28:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop29
	
word_drop29:
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 9		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop29:
	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word29
	int 21h
	
check29:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow29
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h
	
	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs29
	jmp ok29
bs29:
	cmp typed, 3
	if e jmp bss29
	dec typed
bss29:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow29
ok29:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			 ;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a29
	cmp al, 20h
	if ne jmp slow29
check1_1a29:
	mov si, 0000h
	mov typed, 3
check1_129:
	cmp word29[si], '$'
	if e jmp win29
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word29[si], al
	if ne jmp continue29

	inc si
	jmp check1_129
continue29:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

slow29:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check29
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop29			;if dili equal, mu.loop cya..
	if e jmp ch_base29
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win29:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop30	
	cmp al, 13
	if ne jmp continue29
	if e jmp word_drop30
	
ch_base29:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop30
	
word_drop30:
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 9		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop30:
	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word30
	int 21h
	
check30:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow30
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h
	
	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs30
	jmp ok30
bs30:
	cmp typed, 3
	if e jmp bss30
	dec typed
bss30:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow30
ok30:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			 ;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a30
	cmp al, 20h
	if ne jmp slow30
check1_1a30:
	mov si, 0000h
	mov typed, 3
check1_130:
	cmp word30[si], '$'
	if e jmp win30
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word30[si], al
	if ne jmp continue30

	inc si
	jmp check1_130
continue30:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

slow30:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check30
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop30			;if dili equal, mu.loop cya..
	if e jmp ch_base30
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win30:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop31	
	cmp al, 13
	if ne jmp continue30
	if e jmp word_drop31
	
ch_base30:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop31
	
word_drop31:
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 9		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop31:
	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word31
	int 21h
	
check31:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow31
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h
	
	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs31
	jmp ok31
bs31:
	cmp typed, 3
	if e jmp bss31
	dec typed
bss31:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow31
ok31:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			 ;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a31
	cmp al, 20h
	if ne jmp slow31
check1_1a31:
	mov si, 0000h
	mov typed, 3
check1_131:
	cmp word31[si], '$'
	if e jmp win31
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word31[si], al
	if ne jmp continue31

	inc si
	jmp check1_131
continue31:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

slow31:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check31
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop31			;if dili equal, mu.loop cya..
	if e jmp ch_base31
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win31:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop32	
	cmp al, 13
	if ne jmp continue31
	if e jmp word_drop32
	
ch_base31:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop32
	
word_drop32:
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 9		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop32:
	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word32
	int 21h
	
check32:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow32
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h
	
	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs32
	jmp ok32
bs32:
	cmp typed, 3
	if e jmp bss32
	dec typed
bss32:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow32
ok32:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			 ;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a32
	cmp al, 20h
	if ne jmp slow32
check1_1a32:
	mov si, 0000h
	mov typed, 3
check1_132:
	cmp word32[si], '$'
	if e jmp win32
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word32[si], al
	if ne jmp continue32

	inc si
	jmp check1_132
continue32:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

slow32:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check32
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop32			;if dili equal, mu.loop cya..
	if e jmp ch_base32
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win32:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop33	
	cmp al, 13
	if ne jmp continue32
	if e jmp word_drop33
	
ch_base32:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop33
	
word_drop33:
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 9		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop33:
	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word33
	int 21h
	
check33:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow33
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h
	
	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs33
	jmp ok33
bs33:
	cmp typed, 3
	if e jmp bss33
	dec typed
bss33:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow33
ok33:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			 ;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a33
	cmp al, 20h
	if ne jmp slow33
check1_1a33:
	mov si, 0000h
	mov typed, 3
check1_133:
	cmp word33[si], '$'
	if e jmp win33
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word33[si], al
	if ne jmp continue33

	inc si
	jmp check1_133
continue33:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

slow33:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check33
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop33			;if dili equal, mu.loop cya..
	if e jmp ch_base33
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win33:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop34	
	cmp al, 13
	if ne jmp continue33
	if e jmp word_drop34
	
ch_base33:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop34
	
word_drop34:
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 9		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop34:
	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word34
	int 21h
	
check34:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow34
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h
	
	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs34
	jmp ok34
bs34:
	cmp typed, 3
	if e jmp bss34
	dec typed
bss34:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow34
ok34:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			 ;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a34
	cmp al, 20h
	if ne jmp slow34
check1_1a34:
	mov si, 0000h
	mov typed, 3
check1_134:
	cmp word34[si], '$'
	if e jmp win34
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word34[si], al
	if ne jmp continue34

	inc si
	jmp check1_134
continue34:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

slow34:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check34
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop34			;if dili equal, mu.loop cya..
	if e jmp ch_base34
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win34:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop35	
	cmp al, 13
	if ne jmp continue34
	if e jmp word_drop35
	
ch_base34:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop35
	
word_drop35:
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 9		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop35:
	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word35
	int 21h
	
check35:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow35
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h
	
	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs35
	jmp ok35
bs35:
	cmp typed, 3
	if e jmp bss35
	dec typed
bss35:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow35
ok35:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			 ;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a35
	cmp al, 20h
	if ne jmp slow35
check1_1a35:
	mov si, 0000h
	mov typed, 3
check1_135:
	cmp word35[si], '$'
	if e jmp win35
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word35[si], al
	if ne jmp continue35

	inc si
	jmp check1_135
continue35:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

slow35:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check35
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop35			;if dili equal, mu.loop cya..
	if e jmp ch_base35
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win35:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop36	
	cmp al, 13
	if ne jmp continue35
	if e jmp word_drop36
	
ch_base35:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop36
	
word_drop36:
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 10		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop36:
	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word36
	int 21h
	
check36:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow36
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h
	
	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs36
	jmp ok36
bs36:
	cmp typed, 3
	if e jmp bss36
	dec typed
bss36:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow36
ok36:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			 ;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a36
	cmp al, 20h
	if ne jmp slow36
check1_1a36:
	mov si, 0000h
	mov typed, 3
check1_136:
	cmp word36[si], '$'
	if e jmp win36
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word36[si], al
	if ne jmp continue36

	inc si
	jmp check1_136
continue36:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

slow36:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check36
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop36			;if dili equal, mu.loop cya..
	if e jmp ch_base36
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win36:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop37	
	cmp al, 13
	if ne jmp continue36
	if e jmp word_drop37
	
ch_base36:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop37
	
word_drop37:
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 10		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop37:
	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word37
	int 21h
	
check37:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow37
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h
	
	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs37
	jmp ok37
bs37:
	cmp typed, 3
	if e jmp bss37
	dec typed
bss37:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow37
ok37:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			 ;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a37
	cmp al, 20h
	if ne jmp slow37
check1_1a37:
	mov si, 0000h
	mov typed, 3
check1_137:
	cmp word37[si], '$'
	if e jmp win37
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word37[si], al
	if ne jmp continue37

	inc si
	jmp check1_137
continue37:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

slow37:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check37
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop37			;if dili equal, mu.loop cya..
	if e jmp ch_base37
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win37:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop38	
	cmp al, 13
	if ne jmp continue37
	if e jmp word_drop38
	
ch_base37:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop38
	
word_drop38:
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 10		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop38:
	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word38
	int 21h
	
check38:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow38
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h
	
	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs38
	jmp ok38
bs38:
	cmp typed, 3
	if e jmp bss38
	dec typed
bss38:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow38
ok38:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			 ;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a38
	cmp al, 20h
	if ne jmp slow38
check1_1a38:
	mov si, 0000h
	mov typed, 3
check1_138:
	cmp word38[si], '$'
	if e jmp win38
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word38[si], al
	if ne jmp continue38

	inc si
	jmp check1_138
continue38:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

slow38:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check38
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop38			;if dili equal, mu.loop cya..
	if e jmp ch_base38
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win38:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop39	
	cmp al, 13
	if ne jmp continue38
	if e jmp word_drop39
	
ch_base38:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop39
	
word_drop39:
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 10		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop39:
	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word39
	int 21h
	
check39:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow39
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h
	
	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs39
	jmp ok39
bs39:
	cmp typed, 3
	if e jmp bss39
	dec typed
bss39:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow39
ok39:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			 ;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a39
	cmp al, 20h
	if ne jmp slow39
check1_1a39:
	mov si, 0000h
	mov typed, 3
check1_139:
	cmp word39[si], '$'
	if e jmp win39
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word39[si], al
	if ne jmp continue39

	inc si
	jmp check1_139
continue39:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

slow39:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check39
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop39			;if dili equal, mu.loop cya..
	if e jmp ch_base39
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win39:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop40	
	cmp al, 13
	if ne jmp continue39
	if e jmp word_drop40
	
ch_base39:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop40
	
word_drop40:
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 10		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop40:
	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word40
	int 21h
	
check40:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow40
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h
	
	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs40
	jmp ok40
bs40:
	cmp typed, 3
	if e jmp bss40
	dec typed
bss40:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow40
ok40:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			 ;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a40
	cmp al, 20h
	if ne jmp slow40
check1_1a40:
	mov si, 0000h
	mov typed, 3
check1_140:
	cmp word40[si], '$'
	if e jmp win40
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word40[si], al
	if ne jmp continue40

	inc si
	jmp check1_140
continue40:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

slow40:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check40
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop40			;if dili equal, mu.loop cya..
	if e jmp ch_base40
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win40:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop41	
	cmp al, 13
	if ne jmp continue40
	if e jmp word_drop41
	
ch_base40:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop41
	
word_drop41:
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 10		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop41:
	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word41
	int 21h
	
check41:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow41
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h
	
	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs41
	jmp ok41
bs41:
	cmp typed, 3
	if e jmp bss41
	dec typed
bss41:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow41
ok41:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			 ;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a41
	cmp al, 20h
	if ne jmp slow41
check1_1a41:
	mov si, 0000h
	mov typed, 3
check1_141:
	cmp word41[si], '$'
	if e jmp win41
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word41[si], al
	if ne jmp continue41

	inc si
	jmp check1_141
continue41:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

slow41:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check41
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop41			;if dili equal, mu.loop cya..
	if e jmp ch_base41
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win41:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop42	
	cmp al, 13
	if ne jmp continue41
	if e jmp word_drop42
	
ch_base41:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop42
	
word_drop42:
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 10		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop42:
	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word42
	int 21h
	
check42:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow42
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h
	
	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs42
	jmp ok42
bs42:
	cmp typed, 3
	if e jmp bss42
	dec typed
bss42:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow42
ok42:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			 ;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a42
	cmp al, 20h
	if ne jmp slow42
check1_1a42:
	mov si, 0000h
	mov typed, 3
check1_142:
	cmp word42[si], '$'
	if e jmp win42
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word42[si], al
	if ne jmp continue42

	inc si
	jmp check1_142
continue42:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

slow42:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check42
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop42			;if dili equal, mu.loop cya..
	if e jmp ch_base42
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win42:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop43	
	cmp al, 13
	if ne jmp continue42
	if e jmp word_drop43
	
ch_base42:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop43
	
word_drop43:
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 11		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop43:
	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word43
	int 21h
	
check43:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow43
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h
	
	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs43
	jmp ok43
bs43:
	cmp typed, 3
	if e jmp bss43
	dec typed
bss43:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow43
ok43:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			 ;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a43
	cmp al, 20h
	if ne jmp slow43
check1_1a43:
	mov si, 0000h
	mov typed, 3
check1_143:
	cmp word43[si], '$'
	if e jmp win43
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word43[si], al
	if ne jmp continue43

	inc si
	jmp check1_143
continue43:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

slow43:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check43
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop43			;if dili equal, mu.loop cya..
	if e jmp ch_base43
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win43:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop44	
	cmp al, 13
	if ne jmp continue43
	if e jmp word_drop44
	
ch_base43:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop44
	
word_drop44:
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 11		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop44:
	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word44
	int 21h
	
check44:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow44
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h
	
	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs44
	jmp ok44
bs44:
	cmp typed, 3
	if e jmp bss44
	dec typed
bss44:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow44
ok44:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			 ;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a44
	cmp al, 20h
	if ne jmp slow44
check1_1a44:
	mov si, 0000h
	mov typed, 3
check1_144:
	cmp word44[si], '$'
	if e jmp win44
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word44[si], al
	if ne jmp continue44

	inc si
	jmp check1_144
continue44:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

slow44:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check44
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop44			;if dili equal, mu.loop cya..
	if e jmp ch_base44
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win44:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop45	
	cmp al, 13
	if ne jmp continue44
	if e jmp word_drop45
	
ch_base44:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop45
	
word_drop45:
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 11		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop45:
	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word45
	int 21h
	
check45:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow45
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h
	
	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs45
	jmp ok45
bs45:
	cmp typed, 3
	if e jmp bss45
	dec typed
bss45:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow45
ok45:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			 ;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a45
	cmp al, 20h
	if ne jmp slow45
check1_1a45:
	mov si, 0000h
	mov typed, 3
check1_145:
	cmp word45[si], '$'
	if e jmp win45
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word45[si], al
	if ne jmp continue45

	inc si
	jmp check1_145
continue45:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

slow45:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check45
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop45			;if dili equal, mu.loop cya..
	if e jmp ch_base45
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win45:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop46	
	cmp al, 13
	if ne jmp continue45
	if e jmp word_drop46
	
ch_base45:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop46
	
word_drop46:
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 11		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop46:
	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word46
	int 21h
	
check46:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow46
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h
	
	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs46
	jmp ok46
bs46:
	cmp typed, 3
	if e jmp bss46
	dec typed
bss46:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow46
ok46:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			 ;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a46
	cmp al, 20h
	if ne jmp slow46
check1_1a46:
	mov si, 0000h
	mov typed, 3
check1_146:
	cmp word46[si], '$'
	if e jmp win46
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word46[si], al
	if ne jmp continue46

	inc si
	jmp check1_146
continue46:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

slow46:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check46
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop46			;if dili equal, mu.loop cya..
	if e jmp ch_base46
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win46:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop47	
	cmp al, 13
	if ne jmp continue46
	if e jmp word_drop47
	
ch_base46:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop47
	
word_drop47:
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 11		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop47:
	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word47
	int 21h
	
check47:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow47
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h
	
	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs47
	jmp ok47
bs47:
	cmp typed, 3
	if e jmp bss47
	dec typed
bss47:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow47
ok47:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			 ;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a47
	cmp al, 20h
	if ne jmp slow47
check1_1a47:
	mov si, 0000h
	mov typed, 3
check1_147:
	cmp word47[si], '$'
	if e jmp win47
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word47[si], al
	if ne jmp continue47

	inc si
	jmp check1_147
continue47:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

slow47:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check47
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop47			;if dili equal, mu.loop cya..
	if e jmp ch_base47
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win47:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop48	
	cmp al, 13
	if ne jmp continue47
	if e jmp word_drop48
	
ch_base47:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop48
	
word_drop48:
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 12		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop48:
	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word48
	int 21h
	
check48:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow48
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h
	
	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs48
	jmp ok48
bs48:
	cmp typed, 3
	if e jmp bss48
	dec typed
bss48:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow48
ok48:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			 ;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a48
	cmp al, 20h
	if ne jmp slow48
check1_1a48:
	mov si, 0000h
	mov typed, 3
check1_148:
	cmp word48[si], '$'
	if e jmp win48
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word48[si], al
	if ne jmp continue48

	inc si
	jmp check1_148
continue48:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

slow48:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check48
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop48			;if dili equal, mu.loop cya..
	if e jmp ch_base48
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win48:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop49	
	cmp al, 13
	if ne jmp continue48
	if e jmp word_drop49
	
ch_base48:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop49
	
word_drop49:
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	mov midp, 40			;katunga sa column
	mov num_let, 13		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop49:
	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word49
	int 21h
	
check49:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow49
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h
	
	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs49
	jmp ok49
bs49:
	cmp typed, 3
	if e jmp bss49
	dec typed
bss49:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow49
ok49:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			 ;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a49
	cmp al, 20h
	if ne jmp slow49
check1_1a49:
	mov si, 0000h
	mov typed, 3
check1_149:
	cmp word49[si], '$'
	if e jmp win49
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word49[si], al
	if ne jmp continue49

	inc si
	jmp check1_149
continue49:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

slow49:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check49
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop49			;if dili equal, mu.loop cya..
	if e jmp ch_base49
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
win49:
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp word_drop50	
	cmp al, 13
	if ne jmp continue49
	if e jmp word_drop50
	
ch_base49:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop50
		
word_drop50:

	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h
	
	mov midp, 40			;katunga sa column
	mov num_let, 13		;compose ug 20 letters ang word1,
	mov al, num_let
	shr al, 1					;division ni sya, 1 kay kausa ra mushift right
	sub midp, al				;kuhaan ang midpoint para ma.center, column ni..
	mov midp1, 02h
	
	mov si, 0000h
	mov al, 0ffh
	mov looper1, al
	mov counter1, 00h
	mov typed, 3
	
drop50:	

	mov ax, 0600h 		; clearscreen ta ari pirmi aron ineg loop mawagtang tong word, aron di magdoble2x..
	mov bh, 71h
	mov cx, 0215h
	mov dh, c_base
	mov dl, 58
	int 10h
	
	mov dl, midp			;set na nato ang column
	mov dh, midp1		;set pud ang row
	
	mov ah, 02h			;set cursor ni para sa word.. center na ni cya..
	mov bh, 00h
	int 10h
	
	mov ah, 09h			;print word in cursor position
	lea dx, word50
	int 21h
	
check50:

	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 0Bh			; check if naa bay input gkan sa keyboard
	int 21h
	
	cmp al, 00h				; way input
	if e jmp slow50
	
	mov ah, 07h			;interrupts for keyboard input unya isud niya ug al..
	int 21h

	cmp al, 1bh
	if e jmp main_menu
	cmp al, 8
	if e jmp bs50
	jmp ok50
bs50:
	cmp typed, 3
	if e jmp bss50
	dec typed
bss50:
	mov ax, 0600h
	mov bh, 71h
	mov cl, typed
	mov ch, 22
	mov dl, typed
	mov dh, 22
	int 10h

	jmp slow50
ok50:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 09h		    ;i.display ang natype
	mov bl, 71h
	mov bh, 00h
	mov cx, 0001h
	int 10h
	
	inc typed
	
	cmp al, 13			;compare kung ning enter na cya ug space, ug mu.enter ug space, humana cyag input
	if e jmp check1_1a50
	cmp al, 20h
	if ne jmp slow50
check1_1a50:
	mov si, 0000h
	mov typed, 3
check1_150:
	cmp word50[si], '$'
	if e jmp win50
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h
	
	inc typed
	
	cmp word50[si], al
	if ne jmp continue50

	inc si
	jmp check1_150
continue50:
	mov si, 0000h
	mov typed, 3
	
	mov ax, 0600h 		; clearscreen ta para sa input ni nga space
	mov bh, 71h
	mov cx,1603h
	mov dh, 22
	mov dl, 15
	int 10h

	
slow50:
	call delay
	call delay					;delay
	call delay					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp check50
	
	inc midp1					;increment ang row aron munaog
	
	mov al, midp1
	cmp base, al			;compare if base na
	if ne jmp drop50		;if dili equal, mu.loop cya..
	if e jmp ch_base50
	
	mov ah, 07h   			;no echo on screen 
	int 21h
	
	win50:
	
	mov ah, 02h			;cursor position para sa space for entered word
	mov bh, 00h
	mov dl, typed
	mov dh, 22
	int 10h
	
	mov ah, 08h
	mov bh, 00h
	int 10h 
	cmp al, 20h
	if e jmp ez
	cmp al, 13
	if ne jmp continue50
	if e jmp ez
	
ch_base50:
	dec base
	cmp base, 2
	if e jmp gg
	dec c_base
	jmp word_drop50
		
jmp begin

ret

play endp


instruct proc near
instruc:
	mov ax, 0600h
	mov cx, 0000h
	mov dx, 184fh
	mov bh, 04h
	int 10h

	mov ah, 02h
	mov dh,00
	mov dl,00
	mov bh,00h
	int 10h

	mov ah, 09h
	lea dx, drct1
	int 21h

	mov ah, 07h
	int 21h

	cmp al, 'm'
	if e jmp main_menu
	cmp al, 'M'
	if e jmp main_menu
	cmp al, 'B'
	if e jmp typing1
	cmp al, 'b'
	if e jmp typing1
	if ne jmp instruc
ret
instruct endp

typing proc near
typing_menu:
call typing_color

mov ah, 09h
lea dx, menu2_1
int 21h
call delay_t

call typing_color

mov ah, 09h
lea dx, menu2_2
int 21h
call delay_t

call typing_color

mov ah, 09h
lea dx, menu2_3
int 21h
call delay_t

call typing_color

mov ah, 09h
lea dx, menu2_4
int 21h
call delay_t

call typing_color

mov ah, 09h
lea dx, menu2_5
int 21h
call delay_t

call typing_color

mov ah, 09h
lea dx, menu2_6
int 21h
call delay_t

call typing_color

mov ah, 09h
lea dx, menu2_7
int 21h
call delay_t

call typing_color

mov ah, 09h
lea dx, menu2_8
int 21h
call delay_t
typing1:
call typing_color

mov ah, 09h
lea dx, menu2
int 21h
call typing_select

typing_select:
	mov ah, 07h
	int 21h

	cmp al, 'P'
	if e jmp play
	cmp al, 'p'
	if e jmp play
	cmp al,'I'
	if e jmp instruct
	cmp al,'i'
	if e jmp instruct
	cmp al, 'M'
	if e jmp main_menu
	cmp al, 'm'
	if e jmp main_menu
	cmp al, 'E'
	if e jmp exit
	cmp al, 'e'
	if e jmp exit
	if ne jmp typing_select
  ret
typing endp

exit proc near
mov ax, 0600h
mov bh, 03h
mov cx, 00h
mov dx, 184fh
int 10h

mov ah, 02h
mov bh, 00h
mov dh, 12
mov dl, 17
int 10h

mov ah, 09h
lea dx, words1
int 21h

mov ah, 07h
int 21h

cmp al, 'Y'
if e jmp stoper
cmp al, 'y'
if e jmp stoper
cmp al, 'N'
if e jmp begin
cmp al, 'n'
if e jmp begin

ret
exit endp

stoper proc near

mov ah, 00h
mov al, mode
int 10h

mov ax, 4c00h
int 21h

ret
stoper endp

delay proc near

	mov cx,20000
delay1:
	push cx
	mov cx,2000
delay2:
	loop delay2
	pop cx
	loop delay1
ret
	
delay endp

delay_t proc near

mov delaytime, 0
delaydelay_t:
	mov cx,20000
delay1:
~      ^
#ERROR 40: Conflicting Multiple Definition Not Allowed                    @@@@#
	push cx
	mov cx,2000
delay2:
~      ^
#ERROR 40: Conflicting Multiple Definition Not Allowed                    @@@@#
	loop delay2
	pop cx
	loop delay1
	ret
delay_t endp

maze proc near

maze_menu:
call maze_color

mov ah, 09h
lea dx, ani1
int 21h
call choose_m
call delay_mz

call maze_color

mov ah, 09h
lea dx, ani2
int 21h
call choose_m
call delay_mz
jmp maze_menu

maze endp

credits proc near
call clear
	
mov row, 23

call credit1
call delay_c
call clear
mov row, 23
call credit2
call credit1
call delay_c
call clear
mov row, 23
call credit3
call credit2
call credit1
call delay_c
call clear
mov row, 23
call credit4
call credit3
call credit2
call credit1
call delay_c
call clear
mov row, 23
call credit1
call credit4
call credit3
call credit2
call credit1
call delay_c
call clear
mov row, 23
call credit1
call credit1
call credit4
call credit3
call credit2
call credit1
call delay_c
call clear
mov row, 23
call credit5
call credit1
call credit1
call credit4
call credit3
call credit2
call credit1
call delay_c
call clear
mov row, 23
call credit6
call credit5
call credit1
call credit1
call credit4
call credit3
call credit2
call credit1
call delay_c
call clear
mov row, 23
call credit1
call credit6
call credit5
call credit1
call credit1
call credit4
call credit3
call credit2
call credit1
call delay_c
call clear
mov row, 23
call credit1
call credit1
call credit6
call credit5
call credit1
call credit1
call credit4
call credit3
call credit2
call credit1
call delay_c
call clear
mov row, 23
call credit7
call credit1
call credit1
call credit6
call credit5
call credit1
call credit1
call credit4
call credit3
call credit2
call credit1
call delay_c
call clear
mov row, 23
call credit8
call credit7
call credit1
call credit1
call credit6
call credit5
call credit1
call credit1
call credit4
call credit3
call credit2
call credit1
call delay_c
call clear
mov row, 23
call credit_loop
call delay_c
call clear
mov row, 22
call credit_loop
call delay_c
call clear
mov row, 21
call credit_loop
call delay_c
call clear
mov row, 20
call credit_loop
call delay_c
call clear
mov row, 19
call credit_loop
call delay_c
call clear
mov row, 18
call credit_loop
call delay_c
call clear
mov row, 17
call credit_loop

mov ah, 02h
mov dh, 22
mov dl, 00
mov bh, 00h
int 10h

mov ah, 09h
lea dx, cred10
int 21h

credits_select:
	mov ah, 07h
	int 21h

	cmp al, 'b'
	if e jmp main_menu
	cmp al, 'B'
	if e jmp main_menu
	if ne jmp credits_select
ret

credits endp

credit1 proc near
	mov ah, 02h
	mov dh,row
	mov dl,00
	mov bh,00h
	int 10h

	mov ah, 09h
	lea dx, cred1
	int 21h
	
	dec row
	ret
credit1 endp

credit2 proc near
	mov ah, 02h
	mov dh,row
	mov dl,00
	mov bh,00h
	int 10h

	mov ah, 09h
	lea dx, cred2
	int 21h
	
	dec row
	ret
credit2 endp

credit3 proc near
	mov ah, 02h
	mov dh,row
	mov dl,00
	mov bh,00h
	int 10h

	mov ah, 09h
	lea dx, cred3
	int 21h
	
	dec row
	ret
credit3 endp

credit4 proc near
	mov ah, 02h
	mov dh,row
	mov dl,00
	mov bh,00h
	int 10h

	mov ah, 09h
	lea dx, cred4
	int 21h
	
	dec row
	ret
credit4 endp


credit5 proc near
	mov ah, 02h
	mov dh,row
	mov dl,00
	mov bh,00h
	int 10h

	mov ah, 09h
	lea dx, cred5
	int 21h
	
	dec row
	ret
credit5 endp


credit6 proc near
	mov ah, 02h
	mov dh,row
	mov dl,00
	mov bh,00h
	int 10h

	mov ah, 09h
	lea dx, cred6
	int 21h
	
	dec row
	ret
credit6 endp


credit7 proc near
	mov ah, 02h
	mov dh,row
	mov dl,00
	mov bh,00h
	int 10h

	mov ah, 09h
	lea dx, cred7
	int 21h
	
	dec row
	ret
credit7 endp


credit8 proc near
	mov ah, 02h
	mov dh,row
	mov dl,00
	mov bh,00h
	int 10h

	mov ah, 09h
	lea dx, cred8
	int 21h
	
	dec row
	ret
credit8 endp


credit9 proc near
	mov ah, 02h
	mov dh,row
	mov dl,00
	mov bh,00h
	int 10h

	mov ah, 09h
	lea dx, cred9
	int 21h
	
	dec row
	ret
credit9 endp

clear proc near

	mov ax, 0600h
	mov cx, 0000h
	mov dx, 184fh
	mov bh, 04h
	int 10h
ret

clear endp

credit_loop proc near
call credit9
call credit8
call credit7
call credit1
call credit1
call credit6
call credit5
call credit1
call credit1
call credit4
call credit3
call credit2
call credit1
ret
credit_loop endp

delay_c proc near

mov delaytime, 0
delaydelay_c:
	mov cx,20000
delay1:
~      ^
#ERROR 40: Conflicting Multiple Definition Not Allowed                    @@@@#
	push cx
	mov cx,2000
delay2:
~      ^
#ERROR 40: Conflicting Multiple Definition Not Allowed                    @@@@#
	loop delay2
~	           ^
#ERROR 02: Jump > 128                                                     @@@@#
	pop cx
	loop delay1
~	           ^
#ERROR 02: Jump > 128                                                     @@@@#

	ret
delay_c endp

cursorpos proc near

	mov ah, 02h
	mov dh,18h
	mov dl,00
	mov bh,00h
ret

cursorpos endp

gg:
	mov ax, 0600h 		; clearscreen
	mov bh, 71h
	mov cx, 0000h
	mov dh, 24
	mov dl, 79
	int 10h
	
	mov ah, 02h			;set cursor ni para sa word..
	mov bh, 00h
	mov dx, 0000h
	int 10h
	
	mov ah, 09h
	lea dx, loser
	int 21h
	
	int 20h

ez:
	mov ax, 0600h 		; clearscreen
	mov bh, 71h
	mov cx, 0000h
	mov dh, 24
	mov dl, 79
	int 10h
	
	mov ah, 02h			;set cursor ni para sa word..
	mov bh, 00h
	mov dx, 0000h
	int 10h
	
	mov ah, 09h
	lea dx, winner
	int 21h

delay_m proc near

mov delaytime, 0

	mov cx,20000
delay1:
~      ^
#ERROR 40: Conflicting Multiple Definition Not Allowed                    @@@@#
	push cx
	mov cx,2000
delay2:
~      ^
#ERROR 40: Conflicting Multiple Definition Not Allowed                    @@@@#
	loop delay2
~	           ^
#ERROR 02: Jump > 128                                                     @@@@#
	pop cx
	loop delay1
~	           ^
#ERROR 02: Jump > 128                                                     @@@@#

	ret
delay_m endp

menu_color proc near
mov ah, 0fh
int 10h

mov mode, al
mov ah, 00h
mov al, 03h
int 10h

		;frame
mov ax, 0600h	;first horizontal line
mov bh, 03h
mov ch, 1
mov cl,0
mov dh,22
mov dl, 79
int 10h

mov ax, 0600h	;mdc
mov bh, 08h	; color, gray
mov ch,3	;upper row
mov cl, 5	;left column
mov dh, 10	;lower row
mov dl, 43	;right column
int 10h
		;games
mov ax, 0600h	;Bwhite
mov bh, 0fh
mov ch, 5
mov cl, 47
mov dh, 5
mov dl, 75
int 10h
		;3
mov ax, 0600h	;
mov bh, 07h
mov ch, 18
mov cl,23
mov dh,20
mov dl,53 
int 10h
		;games
mov ax, 0600h	;white
mov bh, 07h
mov ch, 6
mov cl,46
mov dh,7
mov dl,75 
int 10h
		;games
mov ax, 0600h	;gray
mov bh, 08h
mov ch, 8
mov cl,46
mov dh,8
mov dl,75 
int 10h

mov ax, 0600h
mov bh, 01h
mov ch, 16
mov cl,7
mov dh,16
mov dl, 67 
int 10h

ret
menu_color endp

choose_m proc near

choosy:
mov ah, 0Bh
int 21h
	
cmp al, 00h
if e ret
mov ah, 07h
int 21h
	cmp al, 'P'
	if e jmp play_maze
	cmp al, 'p'
	if e jmp play_maze
	cmp al,'I'
	if e jmp instruct_m
	cmp al,'i'
	if e jmp instruct_m
	cmp al, 'M'
	if e jmp main_menu
	cmp al, 'm'
	if e jmp main_menu
	cmp al, 'E'
	if e jmp exit
	cmp al, 'e'
	if e jmp exit
	if ne jmp choosy
ret
choose_m endp

delay_mz proc near

mov delaytime, 0
delaydelay_mz:
	mov cx,20000
delay1:
~      ^
#ERROR 40: Conflicting Multiple Definition Not Allowed                    @@@@#
	push cx
	mov cx,2000
delay2:
~      ^
#ERROR 40: Conflicting Multiple Definition Not Allowed                    @@@@#
	loop delay2
~	           ^
#ERROR 02: Jump > 128                                                     @@@@#
	pop cx
	loop delay1
~	           ^
#ERROR 02: Jump > 128                                                     @@@@#

	ret
delay_mz endp

menu endp

maze_color proc near

mov ah, 0fh
int 10h

mov mode, al
mov ah, 00h
mov al, 03h
int 10h

mov ax, 0600h	;head
mov bh, 03h	; color, brown
mov ch,0	;upper row
mov cl,0	;left column
mov dh,24	;lower row
mov dl,78	;right column
int 10h

mov ax, 0600h
mov bh, 08h
mov cl, 3
mov ch, 5
mov dl, 76
mov dh, 9
int 10h

mov ax, 0600h
mov bh, 0fh
mov cl, 28
mov ch, 5
mov dl, 41
mov dh, 16
int 10h

mov ax, 0600h
mov bh, 01h
mov cl, 3
mov ch, 19
mov dl, 76
mov dh, 19
int 10h


ret
maze_color endp

typing_color proc near

mov ah, 0fh
int 10h

mov mode, al
mov ah, 00h
mov al, 03h
int 10h

mov ax, 0600h	
mov bh, 09h	
mov ch,0	
mov cl,0	
mov dh,24	
mov dl,78	
int 10h

mov ax, 0600h
mov bh, 02h
mov cl, 3
mov ch, 2
mov dl, 76
mov dh, 9
int 10h

mov ax, 0600h
mov bh, 0fh
mov cl, 3
mov ch, 10
mov dl, 76
mov dh, 16
int 10h

mov ax, 0600h
mov bh, 01h
mov cl, 3
mov ch, 17
mov dl, 76
mov dh, 22
int 10h
ret
typing_color endp

instruct_m proc near
instruc_m:
	mov ax, 0600h
	mov cx, 0000h
	mov dx, 184fh
	mov bh, 01h
	int 10h

	mov ah, 02h
	mov dh,00
	mov dl,00
	mov bh,00h
	int 10h

	mov ah, 09h
	lea dx, maze_i
	int 21h

	mov ah, 07h
	int 21h

	cmp al, 'm'
	if e jmp main_menu
	cmp al, 'M'
	if e jmp main_menu
	cmp al, 'B'
	if e jmp maze
	cmp al, 'b'
	if e jmp maze
	if ne jmp instruc_m
ret

instruct_m endp


play_maze proc near
game1:
	mov row, 03h 			;location para sa character
        mov col,10
      mdc1:
        call clear
		
        mov ah, 02h		;set cursor para sa mapa
        mov dh, 00h
        mov dl, 00h
        mov bh, 00h
        int 10h
	
	mov ah,06h			;coloring the map
        mov cx,0000h
        mov dx,184fh
        mov bh,08h
        int 10h
	
        mov ah, 09h		;i.load ang mapa
        lea dx, map1
        int 21h  
		
	mov ah,06h			;ang player character 
        mov al,00h
        mov ch,row
        mov cl,col
        mov dh,row
        mov dl,col
        mov bh,0fh
        int 10h
		
        mov ah, 02h		;asa currently located ang character avatar
        mov dh, row
        mov dl, col
        mov bh, 00h
        int 10h	
		
        mov ah, 09h		;i call ang avatar sa player
        lea dx, string1
        int 21h
		
        mov ah, 02h		;ibutang ang cursor sa location sa avatar
        mov dh, row
        mov dl, col
        mov bh, 00h
        int 10h	
		
        mov ah,0bh			;check if naay iput
        int 21h
        mov ah,00h			;check the input
        int 16h
		
      mdc2:
        cmp al, 'd'			;right
        if e jmp inc_col
	cmp al, 'D'
	if e jmp inc_col
	cmp ah, 4dh
	if e jmp inc_col
      mdc3:
        cmp  al, 's'			;down
        if e jmp dec_row
	cmp  al, 'S'
        if e jmp dec_row
	cmp  ah, 50h
        if e jmp dec_row

      mdc4:
        cmp al, 'a'			;left
        if e jmp dec_col
	cmp al, 'A'
        if e jmp dec_col
	cmp ah, 4bh
        if e jmp dec_col
      mdc5:
        cmp al, 'w'			;up
        if e jmp inc_row
	cmp al, 'W'
        if e jmp inc_row
	cmp ah, 48h
        if e jmp inc_row
	cmp al, '2'
	if e jmp game2
		
	cmp al, 1bh			;escape to main menu
	if e jmp main_menu
        jmp mdc1

      inc_row:
        dec row

        mov ah, 02h
        mov dh, row
        mov dl, col
        mov bh, 00h
        int 10h

        mov ah, 08h
        mov bh, 00h
        int 10h

        cmp al, ' '
        if e jmp mdc1

        inc row
        jmp mdc1

      inc_col:
	inc col

        mov ah, 02h
        mov dh, row
        mov dl, col
        mov bh, 00h
        int 10h

        mov ah, 08h
        mov bh, 00h
        int 10h

        cmp al, ' '
        if e jmp mdc1

        cmp al, 'ћ'
~                   ^
#ERROR 30: Byte-Sized Constant Required                                   @@@@#
        if e jmp game2

        dec col
        jmp mdc1

      dec_col:
        dec col

        mov ah, 02h
        mov dh, row
        mov dl, col
        mov bh, 00h
        int 10h

        mov ah, 08h
        mov bh, 00h
        int 10h

        cmp al, ' '
        if e jmp mdc1

        inc col
        jmp mdc1


      dec_row:
        inc row
        mov ah, 02h
        mov dh, row
        mov dl, col
        mov bh, 00h
        int 10h

        mov ah, 08h
        mov bh, 00h
        int 10h

        cmp al, ' '
        if e jmp mdc1

        dec row
        jmp mdc1

game2:
		mov ecol,0
	mov row,2 			;location para sa character
        mov col,2
	mov al, 0ffh
	mov looper1, al		;mao niy gidaghanon sa loop nga paspas kaayo bag.o mudrop ang word
	mov counter1, 00h
mdc1_2:
	call clear	
        mov ah, 02h		;set cursor para sa mapa
        mov dh, 00h
        mov dl, 00h
        mov bh, 00h
        int 10h
	
	mov ah,06h			;coloring the map
        mov cx,0000h
        mov dx,184fh
        mov bh,08h
        int 10h
	
        mov ah, 09h		;i.load ang mapa
        lea dx, map2
        int 21h  
		
	mov ah,06h			;ang player character 
        mov al,00h
        mov ch,row
        mov cl,col
        mov dh,row
        mov dl,col
        mov bh,0fh
        int 10h
		
        mov ah, 02h		;asa currently located ang character avatar
        mov dh, row
        mov dl, col
        mov bh, 00h
        int 10h	
		
        mov ah, 09h		;i call ang avatar sa player
        lea dx, string1
        int 21h
		
        mov ah, 02h		;ibutang ang cursor sa location sa avatar
        mov dh, row
        mov dl, col
        mov bh, 00h
        int 10h	
	
	cmp col, 43
	if e jmp trial
	
        mov ah,0bh			;check if naay iput
        int 21h
	
        mov ah,00h			;check the input
        int 16h
		
      mdc2_2:
        cmp al, 'd'			;right
        if e jmp inc_col2
	cmp al, 'D'
	if e jmp inc_col2
	cmp ah, 4dh
	if e jmp inc_col2
      mdc3_2:
        cmp  al, 's'			;down
        if e jmp dec_row2
	cmp  al, 'S'
        if e jmp dec_row2
	cmp  ah, 50h
        if e jmp dec_row2

      mdc4_2:
        cmp al, 'a'			;left
        if e jmp dec_col2
	cmp al, 'A'
        if e jmp dec_col2
	cmp ah, 4bh
        if e jmp dec_col2
      mdc5_2:
        cmp al, 'w'			;up
        if e jmp inc_row2
	cmp al, 'W'
        if e jmp inc_row2
	cmp ah, 48h
        if e jmp inc_row2

		
	cmp al, 1bh			;escape to main menu
	if e jmp main_menu
        jmp mdc1_2

      inc_row2:
        dec row

        mov ah, 02h
        mov dh, row
        mov dl, col
        mov bh, 00h
        int 10h

        mov ah, 08h
        mov bh, 00h
        int 10h

        cmp al, ' '
        if e jmp mdc1_2

        inc row
        jmp mdc1_2

      inc_col2:
	inc col

        mov ah, 02h
        mov dh, row
        mov dl, col
        mov bh, 00h
        int 10h

        mov ah, 08h
        mov bh, 00h
        int 10h

        cmp al, ' '
        if e jmp mdc1_2

        cmp al, 'ћ'
~                   ^
#ERROR 30: Byte-Sized Constant Required                                   @@@@#
        if e ret

        dec col
        jmp mdc1_2

      dec_col2:
        dec col

        mov ah, 02h
        mov dh, row
        mov dl, col
        mov bh, 00h
        int 10h

        mov ah, 08h
        mov bh, 00h
        int 10h

        cmp al, ' '
        if e jmp mdc1_2

        inc col
        jmp mdc1_2


      dec_row2:
        inc row
        mov ah, 02h
        mov dh, row
        mov dl, col
        mov bh, 00h
        int 10h

        mov ah, 08h
        mov bh, 00h
        int 10h

        cmp al, ' '
        if e jmp mdc1_2

        dec row
        jmp mdc1_2
mdc1_3:
        call clear
		
        mov ah, 02h		;set cursor para sa mapa
        mov dh, 00h
        mov dl, 00h
        mov bh, 00h
        int 10h
	
	mov ah,06h			;coloring the map
        mov ch, 0
	mov cl, 0
        mov dh, 24
	mov dl,79
        mov bh,08h
        int 10h

	mov ah,06h			;coloring the map
        mov ch, 2
	mov cl, 2
        mov dh, 22
	mov dl,ecol
        mov bh,00h
        int 10h
	
        mov ah, 09h		;i.load ang mapa
        lea dx, map2
        int 21h 
	
	mov al, col
	cmp ecol, al
	if e jmp main_menu
	
	mov ah,06h		;ang player character 
        mov al,00h
        mov ch,row
        mov cl,col
        mov dh,row
        mov dl,col
        mov bh,0fh
        int 10h
		
        mov ah, 02h		;asa currently located ang character avatar
        mov dh, row
        mov dl, col
        mov bh, 00h
        int 10h	
		
        mov ah, 09h		;i call ang avatar sa player
        lea dx, string1
        int 21h
		
        mov ah, 02h		;ibutang ang cursor sa location sa avatar
        mov dh, row
        mov dl, col
        mov bh, 00h
        int 10h	
trial:		
        mov ah,0bh			;check if naay iput
        int 21h
	
	cmp al, 00h
	if e jmp maze_slow3
	
        mov ah,00h			;check the input
        int 16h
		
      mdc2_3:
        cmp al, 'd'			;right
        if e jmp inc_col3
	cmp al, 'D'
	if e jmp inc_col3
	cmp ah, 4dh
	if e jmp inc_col3
      mdc3_3:
        cmp  al, 's'			;down
        if e jmp dec_row3
	cmp  al, 'S'
        if e jmp dec_row3
	cmp  ah, 50h
        if e jmp dec_row3

      mdc4_3:
        cmp al, 'a'			;left
        if e jmp dec_col3
	cmp al, 'A'
        if e jmp dec_col3
	cmp ah, 4bh
        if e jmp dec_col3
      mdc5_3:
        cmp al, 'w'			;up
        if e jmp inc_row3
	cmp al, 'W'
        if e jmp inc_row3
	cmp ah, 48h
        if e jmp inc_row3

		
	cmp al, 1bh			;escape to main menu
	if e jmp main_menu
        jmp mdc1_3

      inc_row3:
        dec row

        mov ah, 02h
        mov dh, row
        mov dl, col
        mov bh, 00h
        int 10h

        mov ah, 08h
        mov bh, 00h
        int 10h

        cmp al, ' '
        if e jmp maze_slow3

        inc row
        jmp maze_slow3

      inc_col3:
	inc col

        mov ah, 02h
        mov dh, row
        mov dl, col
        mov bh, 00h
        int 10h

        mov ah, 08h
        mov bh, 00h
        int 10h

        cmp al, ' '
        if e jmp maze_slow3

        cmp al, 'ћ'
~                   ^
#ERROR 30: Byte-Sized Constant Required                                   @@@@#
        if e jmp main_menu

        dec col
        jmp maze_slow3

      dec_col3:
        dec col

        mov ah, 02h
        mov dh, row
        mov dl, col
        mov bh, 00h
        int 10h

        mov ah, 08h
        mov bh, 00h
        int 10h

        cmp al, ' '
        if e jmp maze_slow3

        inc col
        jmp maze_slow3


      dec_row3:
        inc row
        mov ah, 02h
        mov dh, row
        mov dl, col
        mov bh, 00h
        int 10h

        mov ah, 08h
        mov bh, 00h
        int 10h

        cmp al, ' '
        if e jmp maze_slow3
	        cmp al, 'ћ'
~	                    ^
#ERROR 30: Byte-Sized Constant Required                                   @@@@#
        if e jmp main_menu

        dec row
        jmp maze_slow3

maze_slow3:
	call delay_map2
	call delay_map2					;delay
	call delay_map2					;kaduhaon para dugay
	
	inc counter1
	mov al, counter1
	cmp looper1, al
	if ne jmp mdc1_3	

	inc ecol	
	jmp mdc1_3
		
        ret

play_maze endp

delay_map2 proc near

	mov cx,20000
delay1:
~      ^
#ERROR 40: Conflicting Multiple Definition Not Allowed                    @@@@#
	push cx
	mov cx,2000
delay2:
~      ^
#ERROR 40: Conflicting Multiple Definition Not Allowed                    @@@@#
	loop delay2
~	           ^
#ERROR 02: Jump > 128                                                     @@@@#
	pop cx
	loop delay1
~	           ^
#ERROR 02: Jump > 128                                                     @@@@#
	ret
	
delay_map2 endp


end main
